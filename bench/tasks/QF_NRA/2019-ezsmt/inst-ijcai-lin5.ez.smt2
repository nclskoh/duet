(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Da Shen, Yuliya Lierler
Generated on: 2019-04-29
Generator: EZSMT+
Application: SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs [1]

[1] Da Shen and Yuliya Lierler. "SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs"
    16th International Conference on Principles of Knowledge Representation and Reasoning (2018)
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; --- END HEADER ---

; --- Including necessary SMT functions ---

(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))

(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))

; --- END INCLUDES ---

(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank4)),end(1)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),3)| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,2),1000))| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank3)),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),2),0,1000)| () Bool)
(declare-fun |completed(refuel(tank2),3)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,2),0))| () Bool)
(declare-fun |required(ezcsp__geq(end(2),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| () Bool)
(declare-fun |fluent(inprogr(refuel(tank5)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),2),0,1000)| () Bool)
(declare-fun |maction(refuel(tank1))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank4)),1))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank1)),3))| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,1),0))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,0),1000))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),3)| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,2),1000))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),2)| () Bool)
(declare-fun |cspvar(adur(refuel(tank4)),0,1000)| () Bool)
(declare-fun |occurs(start(refuel(tank4)),1)| () Bool)
(declare-fun |holds(generating,2)| () Bool)
(declare-fun |cap(tank3,20)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),3)| () Bool)
(declare-fun |cspvar(start(2),0,1000)| () Bool)
(declare-fun |cspvar(start(1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| () Bool)
(declare-fun |tankcap(1000)| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,2),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |524| () Bool)
(declare-fun |525| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),2),0,1000)| () Bool)
(declare-fun |520| () Bool)
(declare-fun |521| () Bool)
(declare-fun |cspvar(adur(generate),0,1000)| () Bool)
(declare-fun |523| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),0)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank3)),end(1)))| () Bool)
(declare-fun |tanklv(920)| () Bool)
(declare-fun |449| () Bool)
(declare-fun |448| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank2)),end(0)))| () Bool)
(declare-fun |443| () Bool)
(declare-fun |442| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),2),0,1000)| () Bool)
(declare-fun |440| () Bool)
(declare-fun |447| () Bool)
(declare-fun |446| () Bool)
(declare-fun |445| () Bool)
(declare-fun |444| () Bool)
(declare-fun |cspvar(stime(refuel(tank4)),0,1000)| () Bool)
(declare-fun |refuel_tank(tank2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))| () Bool)
(declare-fun |occurs(end(refuel(tank3)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |437| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |action(end(refuel(tank5)))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |242| () Bool)
(declare-fun |holds(inprogr(generate),3)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |completed(refuel(tank4),3)| () Bool)
(declare-fun |occurs(end(refuel(tank4)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))| () Bool)
(declare-fun |hold_s(generating,2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,1),0,1000)| () Bool)
(declare-fun |cspvar(stime(refuel(tank2)),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),0)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,2),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required_false(geq_flevel_0,0)| () Bool)
(declare-fun |cspvar(adur(refuel(tank3)),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |cspvar(adur(refuel(tank2)),0,1000)| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank5)),3))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,3),1000))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),1),0,1000)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank5)),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),2)| () Bool)
(declare-fun |duration(refuel(tank1),10)| () Bool)
(declare-fun |duration(refuel(tank3),10)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank1)),end(1)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),2)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),2),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))| () Bool)
(declare-fun |occurs(end(refuel(tank2)),2)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank4)),end(0)))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))| () Bool)
(declare-fun |maction(refuel(tank3))| () Bool)
(declare-fun |step(0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),3)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),0),0,1000)| () Bool)
(declare-fun |515| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank2)),1))| () Bool)
(declare-fun |completed(refuel(tank1),2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),3),0,1000)| () Bool)
(declare-fun |occurs(start(refuel(tank5)),1)| () Bool)
(declare-fun |occurs(start(refuel(tank3)),1)| () Bool)
(declare-fun |decr(2,v(contrib(fuel_level,decr,generate),2))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),0)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank2)),end(1)))| () Bool)
(declare-fun |498| () Bool)
(declare-fun |occurs(end(refuel(tank3)),2)| () Bool)
(declare-fun |action(end(refuel(tank1)))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,1),1000))| () Bool)
(declare-fun |494| () Bool)
(declare-fun |495| () Bool)
(declare-fun |496| () Bool)
(declare-fun |497| () Bool)
(declare-fun |490| () Bool)
(declare-fun |491| () Bool)
(declare-fun |492| () Bool)
(declare-fun |493| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank4)),2))| () Bool)
(declare-fun |occurs(start(generate),1)| () Bool)
(declare-fun |hold_s(inprogr(generate),1)| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),2)| () Bool)
(declare-fun |cspvar(adur(refuel(tank5)),0,1000)| () Bool)
(declare-fun |completed(generate)| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,2),0))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank3)),1))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| () Bool)
(declare-fun |454| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| () Bool)
(declare-fun |occurs(end(refuel(tank4)),1)| () Bool)
(declare-fun |completed(refuel(tank2),2)| () Bool)
(declare-fun |456| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,1),1000))| () Bool)
(declare-fun |some_action(2)| () Bool)
(declare-fun |cspvar(stime(refuel(tank1)),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| () Bool)
(declare-fun |hold_s(generating,0)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank3)),end(0)))| () Bool)
(declare-fun |duration(generate,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| () Bool)
(declare-fun |cspdomain(r)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| () Bool)
(declare-fun |cap(tank2,20)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))| () Bool)
(declare-fun |action(start(refuel(tank2)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),3),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),0),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),2)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))| () Bool)
(declare-fun |cap(tank4,20)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),3)| () Bool)
(declare-fun |maction(refuel(tank4))| () Bool)
(declare-fun |completed(refuel(tank5),2)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),2)| () Bool)
(declare-fun |holds(generating,3)| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),1)| () Bool)
(declare-fun |cspvar(stime(generate),0,1000)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank3)))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))| () Bool)
(declare-fun |519| () Bool)
(declare-fun |518| () Bool)
(declare-fun |cspvar(end(3),0,1000)| () Bool)
(declare-fun |511| () Bool)
(declare-fun |510| () Bool)
(declare-fun |513| () Bool)
(declare-fun |512| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),1)| () Bool)
(declare-fun |514| () Bool)
(declare-fun |517| () Bool)
(declare-fun |516| () Bool)
(declare-fun |458| () Bool)
(declare-fun |459| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |450| () Bool)
(declare-fun |451| () Bool)
(declare-fun |452| () Bool)
(declare-fun |453| () Bool)
(declare-fun |cspvar(start(3),0,1000)| () Bool)
(declare-fun |455| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| () Bool)
(declare-fun |457| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),0),0,1000)| () Bool)
(declare-fun |refuel_tank(tank3)| () Bool)
(declare-fun |completed(refuel(tank3),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank3)),3))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,1),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),2),0,1000)| () Bool)
(declare-fun |hold_s(generating,3)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| () Bool)
(declare-fun |occurs(start(refuel(tank2)),0)| () Bool)
(declare-fun |completed(generate,2)| () Bool)
(declare-fun |completed(refuel(tank4),2)| () Bool)
(declare-fun |occurs(start(refuel(tank1)),1)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),3)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))| () Bool)
(declare-fun |hold_s(inprogr(generate),2)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank5)),end(0)))| () Bool)
(declare-fun |some_action(0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),3)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank1)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),1)| () Bool)
(declare-fun |required_false(geq_flevel_0,1)| () Bool)
(declare-fun |required(ezcsp__geq(start(2),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(generate),0))| () Bool)
(declare-fun |cap(tank1,20)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),2)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |cspvar(adur(refuel(tank1)),0,1000)| () Bool)
(declare-fun |some_action(1)| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),1)| () Bool)
(declare-fun |320| () Bool)
(declare-fun |321| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))| () Bool)
(declare-fun |maction(refuel(tank5))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),3),0,1000)| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank5)),2))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| () Bool)
(declare-fun |action(start(refuel(tank4)))| () Bool)
(declare-fun |occurs(end(refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__geq(start(0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |required(ezcsp__eq(start(3),end(2)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank5)),0))| () Bool)
(declare-fun |occurs(start(refuel(tank5)),0)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))| () Bool)
(declare-fun |occurs(end(refuel(tank2)),1)| () Bool)
(declare-fun |maction(generate)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |decr(1,v(contrib(fuel_level,decr,generate),1))| () Bool)
(declare-fun |step(1)| () Bool)
(declare-fun |required(ezcsp__eq(stime(generate),end(0)))| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| () Bool)
(declare-fun |completed(refuel(tank1),3)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,0),920))| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,3),1000))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),2)| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))| () Bool)
(declare-fun |maction(refuel(tank2))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))| () Bool)
(declare-fun |occurs(start(refuel(tank3)),0)| () Bool)
(declare-fun |522| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,0),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |refuel_tank(tank4)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |occurs(start(generate),0)| () Bool)
(declare-fun |duration(refuel(tank4),10)| () Bool)
(declare-fun |duration(refuel(tank2),10)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank4)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |required(ezcsp__geq(end(0),start(0)))| () Bool)
(declare-fun |319| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank5)),1))| () Bool)
(declare-fun |holds(inprogr(generate),1)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(end(2),start(2)))| () Bool)
(declare-fun |required(ezcsp__geq(end(3),0))| () Bool)
(declare-fun |restricted_ineq(nlp)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |cspvar(dur(3),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(start(3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))| () Bool)
(declare-fun |441| () Bool)
(declare-fun |occurs(end(generate),1)| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank2)),3))| () Bool)
(declare-fun |cspvar(v_final(fuel_level,1),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(start(0),0))| () Bool)
(declare-fun |fluent(inprogr(generate))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank1)),end(0)))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,0),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),3)| () Bool)
(declare-fun |required(ezcsp__geq(end(1),0))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))| () Bool)
(declare-fun |468| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))| () Bool)
(declare-fun |action(end(refuel(tank2)))| () Bool)
(declare-fun |completed(refuel(tank5),3)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),1),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank1)),0))| () Bool)
(declare-fun |499| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank3)),0))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),2),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),3)| () Bool)
(declare-fun |508| () Bool)
(declare-fun |509| () Bool)
(declare-fun |506| () Bool)
(declare-fun |507| () Bool)
(declare-fun |504| () Bool)
(declare-fun |505| () Bool)
(declare-fun |502| () Bool)
(declare-fun |503| () Bool)
(declare-fun |500| () Bool)
(declare-fun |501| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |469| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,0),0))| () Bool)
(declare-fun |465| () Bool)
(declare-fun |464| () Bool)
(declare-fun |occurs(end(refuel(tank1)),1)| () Bool)
(declare-fun |466| () Bool)
(declare-fun |461| () Bool)
(declare-fun |460| () Bool)
(declare-fun |463| () Bool)
(declare-fun |462| () Bool)
(declare-fun |cspvar(dur(1),0,1000)| () Bool)
(declare-fun |completed(refuel(tank3),3)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),3)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,2),0))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank4)),3))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),3)| () Bool)
(declare-fun |cspvar(end(2),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),1),0,1000)| () Bool)
(declare-fun |completed(generate,3)| () Bool)
(declare-fun |occurs(end(generate),2)| () Bool)
(declare-fun |cspvar(start(0),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),0),0,1000)| () Bool)
(declare-fun |occurs(start(refuel(tank1)),0)| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank2)),2))| () Bool)
(declare-fun |required(ezcsp__geq(end(1),start(1)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |action(start(refuel(tank5)))| () Bool)
(declare-fun |467| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank4)),0))| () Bool)
(declare-fun |hold_s(inprogr(generate),3)| () Bool)
(declare-fun |decr(0,v(contrib(fuel_level,decr,generate),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(start(1),end(0)))| () Bool)
(declare-fun |required(ezcsp__eq(stime(generate),end(1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),3),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| () Bool)
(declare-fun |439| () Bool)
(declare-fun |action(start(generate))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),3)| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))| () Bool)
(declare-fun |cspvar(dur(0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__geq(end(0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |fluent(inprogr(refuel(tank2)))| () Bool)
(declare-fun |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))| () Bool)
(declare-fun |occurs(start(refuel(tank2)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| () Bool)
(declare-fun |cspvar(end(1),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank2)),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))| () Bool)
(declare-fun |occurs(end(refuel(tank5)),2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))| () Bool)
(declare-fun |restricted_ineq(lp)| () Bool)
(declare-fun |cspvar(stime(refuel(tank3)),0,1000)| () Bool)
(declare-fun |maxintval(1000)| () Bool)
(declare-fun |438| () Bool)
(declare-fun |holds(inprogr(generate),2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),1)| () Bool)
(declare-fun |required_false(geq_flevel_0,2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| () Bool)
(declare-fun |occurs(start(refuel(tank4)),0)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,3),0,1000)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank2)),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),2)| () Bool)
(declare-fun |478| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),3)| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank1)),2))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))| () Bool)
(declare-fun |action(end(refuel(tank4)))| () Bool)
(declare-fun |cap(tank5,20)| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),1)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank1)),0))| () Bool)
(declare-fun |refuel_tank(tank5)| () Bool)
(declare-fun |fluent(generating)| () Bool)
(declare-fun |action(start(refuel(tank1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| () Bool)
(declare-fun |required(ezcsp__geq(start(1),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))| () Bool)
(declare-fun |cspvar(end(0),0,1000)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),0)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,0),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),2),0,1000)| () Bool)
(declare-fun |486| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,3),0,1000)| () Bool)
(declare-fun |duration(refuel(tank5),10)| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),3)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| () Bool)
(declare-fun |holds(generating,1)| () Bool)
(declare-fun |action(end(refuel(tank3)))| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),2)| () Bool)
(declare-fun |cspvar(dur(2),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),1)| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,0),1000))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),1),0,1000)| () Bool)
(declare-fun |cspvar(stime(refuel(tank5)),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank5)),end(1)))| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))| () Bool)
(declare-fun |step(3)| () Bool)
(declare-fun |refuel_tank(tank1)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))| () Bool)
(declare-fun |required(ezcsp__geq(end(3),start(3)))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank1)),1))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| () Bool)
(declare-fun |action(start(refuel(tank3)))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank3)),2))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),2)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),1)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank4)),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),0),0,1000)| () Bool)
(declare-fun |step(2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),2)| () Bool)
(declare-fun |decr(3,v(contrib(fuel_level,decr,generate),3))| () Bool)
(declare-fun |hold_s(generating,1)| () Bool)
(declare-fun |475| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),3),0,1000)| () Bool)
(declare-fun |489| () Bool)
(declare-fun |488| () Bool)
(declare-fun |487| () Bool)
(declare-fun |action(end(generate))| () Bool)
(declare-fun |485| () Bool)
(declare-fun |484| () Bool)
(declare-fun |483| () Bool)
(declare-fun |482| () Bool)
(declare-fun |481| () Bool)
(declare-fun |480| () Bool)
(declare-fun |hold_s(inprogr(generate),0)| () Bool)
(declare-fun |472| () Bool)
(declare-fun |473| () Bool)
(declare-fun |470| () Bool)
(declare-fun |471| () Bool)
(declare-fun |476| () Bool)
(declare-fun |477| () Bool)
(declare-fun |474| () Bool)
(declare-fun |occurs(end(refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__eq(start(2),end(1)))| () Bool)
(declare-fun |479| () Bool)
(assert (or (not |occurs(end(refuel(tank1)),1)|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |469|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(end(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |470|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(end(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |471|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(end(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |472|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(end(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |473|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(end(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |474|) |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |475|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |476|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |477|) |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |478|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |479|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |480|) |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |481|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |482|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |483|) |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |484|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |485|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or (not |486|) |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or (not |487|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |488|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |489|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |490|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |491|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |492|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |493|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |holds(inprogr(refuel(tank1)),3)| |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |holds(inprogr(refuel(tank2)),3)| |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |holds(inprogr(refuel(tank3)),3)| |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |holds(inprogr(refuel(tank4)),3)| |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |holds(inprogr(refuel(tank5)),3)| |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or |hold_s(generating,1)| |holds(generating,1)|))
(assert (or (not |occurs(start(generate),0)|) |holds(generating,1)|))
(assert (or |hold_s(inprogr(generate),1)| |holds(inprogr(generate),1)|))
(assert (or (not |occurs(start(generate),0)|) |holds(inprogr(generate),1)|))
(assert (or |hold_s(inprogr(refuel(tank1)),1)| |holds(inprogr(refuel(tank1)),1)|))
(assert (or |hold_s(inprogr(refuel(tank2)),1)| |holds(inprogr(refuel(tank2)),1)|))
(assert (or |hold_s(inprogr(refuel(tank3)),1)| |holds(inprogr(refuel(tank3)),1)|))
(assert (or |hold_s(inprogr(refuel(tank4)),1)| |holds(inprogr(refuel(tank4)),1)|))
(assert (or |hold_s(inprogr(refuel(tank5)),1)| |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |494|) |hold_s(generating,2)|))
(assert (or (not |occurs(end(generate),1)|) |hold_s(generating,2)|))
(assert (or (not |occurs(start(generate),1)|) |holds(generating,2)|))
(assert (or (not |495|) |holds(generating,2)|))
(assert (or (not |496|) |hold_s(inprogr(generate),2)|))
(assert (or (not |occurs(end(generate),1)|) |hold_s(inprogr(generate),2)|))
(assert (or (not |occurs(start(generate),1)|) |holds(inprogr(generate),2)|))
(assert (or (not |497|) |holds(inprogr(generate),2)|))
(assert (or (not |498|) |hold_s(generating,3)|))
(assert (or (not |occurs(end(generate),2)|) |hold_s(generating,3)|))
(assert (or (not |holds(generating,2)|) |holds(generating,3)| |hold_s(generating,3)|))
(assert (or (not |499|) |hold_s(inprogr(generate),3)|))
(assert (or (not |occurs(end(generate),2)|) |hold_s(inprogr(generate),3)|))
(assert (or (not |holds(inprogr(generate),2)|) |holds(inprogr(generate),3)| |hold_s(inprogr(generate),3)|))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(end(generate),1)|) |occurs(end(generate),1)|))
(assert (or (not |500|) |occurs(end(generate),2)|))
(assert (or (not |501|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),0)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(generating,1)|) (not |occurs(start(generate),1)|) |occurs(start(generate),1)|))
(assert (or (not |hold_s(inprogr(generate),1)|) (not |occurs(end(generate),1)|)))
(assert (or (not |hold_s(inprogr(generate),2)|) (not |occurs(end(generate),2)|)))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(start(generate),1)|)))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |hold_s(inprogr(refuel(tank1)),1)|)))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |hold_s(inprogr(refuel(tank2)),1)|)))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |hold_s(inprogr(refuel(tank3)),1)|)))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |hold_s(inprogr(refuel(tank4)),1)|)))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |hold_s(inprogr(refuel(tank5)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) (not |occurs(end(refuel(tank1)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) (not |occurs(end(refuel(tank2)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) (not |occurs(end(refuel(tank3)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) (not |occurs(end(refuel(tank4)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) (not |occurs(end(refuel(tank5)),2)|)))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(start(refuel(tank1)),1)|)))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(start(refuel(tank2)),1)|)))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(start(refuel(tank3)),1)|)))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(start(refuel(tank4)),1)|)))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(start(refuel(tank5)),1)|)))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |444|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |448|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |451|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |454|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |457|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(generate),0)|) (not |required_false(geq_flevel_0,0)|)))
(assert (or (not |hold_s(generating,1)|) |462|))
(assert (or (not |hold_s(generating,2)|) |464|))
(assert (or (not |occurs(start(generate),0)|) |467|))
(assert (or (not |occurs(start(generate),1)|) |occurs(end(generate),2)|))
(assert (or (not |occurs(end(generate),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))|))
(assert (or (not |occurs(end(generate),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))|))
(assert (or (not |occurs(end(generate),1)|) |completed(generate,2)|))
(assert (or (not |occurs(end(generate),2)|) |completed(generate,3)|))
(assert (or (not |occurs(start(generate),0)|) |required(ezcsp__eq(stime(generate),end(0)))|))
(assert (or (not |occurs(start(generate),1)|) |required(ezcsp__eq(stime(generate),end(1)))|))
(assert (or (not |holds(inprogr(generate),1)|) |ab(contrib(fuel_level,decr,generate),1)|))
(assert (or (not |holds(inprogr(generate),2)|) |ab(contrib(fuel_level,decr,generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) |ab(contrib(fuel_level,decr,generate),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| |ab(contrib(fuel_level,decr,generate),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| |ab(contrib(fuel_level,decr,generate),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| |ab(contrib(fuel_level,decr,generate),3)|))
(assert (or (not |holds(inprogr(generate),1)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(generate),2)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(generate),3)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |required_false(geq_flevel_0,0)|) |required(ezcsp__lt(v_final(fuel_level,0),0))|))
(assert (or (not |required_false(geq_flevel_0,0)|) |required_false(geq_flevel_0,0)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |required(ezcsp__lt(v_final(fuel_level,1),0))|))
(assert (or (not |hold_s(generating,1)|) (not |required_false(geq_flevel_0,1)|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |required(ezcsp__lt(v_final(fuel_level,2),0))|))
(assert (or (not |hold_s(generating,2)|) (not |required_false(geq_flevel_0,2)|) |required_false(geq_flevel_0,2)|))
(assert (or (not |502|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |503|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |504|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |505|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |506|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |507|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |508|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |509|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |510|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |511|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |512|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |513|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |514|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |515|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |516|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |517|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |518|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |519|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |520|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |521|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |522|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |523|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |524|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |525|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),0)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),0)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),1)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),1)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |319|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |319|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |319|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |319|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |319|))
(assert (or (not |occurs(start(generate),0)|) |319|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |320|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |320|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |320|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |320|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |320|))
(assert (or (not |occurs(start(generate),1)|) |320|))
(assert (or (not |occurs(end(generate),1)|) |320|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |321|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |321|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |321|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |321|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |321|))
(assert (or (not |occurs(end(generate),2)|) |321|))
(assert (or (not |319|) |some_action(0)|))
(assert (or (not |320|) |some_action(1)|))
(assert (or (not |321|) |some_action(2)|))
(assert (or (not |completed(generate,2)|) |completed(generate)|))
(assert (or (not |completed(generate,3)|) |completed(generate)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |completed(refuel(tank1),2)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |completed(refuel(tank2),2)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |completed(refuel(tank3),2)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |completed(refuel(tank4),2)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |completed(refuel(tank5),2)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |completed(refuel(tank1),3)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |completed(refuel(tank2),3)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |completed(refuel(tank3),3)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |completed(refuel(tank4),3)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |completed(refuel(tank5),3)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(stime(refuel(tank1)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(stime(refuel(tank2)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(stime(refuel(tank3)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(stime(refuel(tank4)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(stime(refuel(tank5)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(stime(refuel(tank1)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(stime(refuel(tank2)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(stime(refuel(tank3)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(stime(refuel(tank4)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(stime(refuel(tank5)),end(1)))|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |ab(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |ab(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |ab(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |ab(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |ab(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |ab(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |ab(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |ab(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |ab(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |ab(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |ab(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |ab(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |ab(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |ab(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |ab(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |442|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |442|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(end(refuel(tank1)),2)|) |443|))
(assert (or (not |442|) |444| |443|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |446|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |446|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(end(refuel(tank2)),2)|) |447|))
(assert (or (not |446|) |448| |447|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |449|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |449|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(end(refuel(tank3)),2)|) |450|))
(assert (or (not |449|) |451| |450|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |452|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |452|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(end(refuel(tank4)),2)|) |453|))
(assert (or (not |452|) |454| |453|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |455|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |455|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(end(refuel(tank5)),2)|) |456|))
(assert (or (not |455|) |457| |456|))
(assert (or (not |occurs(start(generate),0)|) |458|))
(assert (or (not |required_false(geq_flevel_0,0)|) |458|))
(assert (or (not |458|) |459|))
(assert (or (not |occurs(start(generate),1)|) |460|))
(assert (or (not |required_false(geq_flevel_0,1)|) |460|))
(assert (or (not |occurs(start(generate),1)|) (not |required_false(geq_flevel_0,1)|) |461|))
(assert (or (not |460|) |462| |461|))
(assert (or (not |required_false(geq_flevel_0,2)|) |463|))
(assert (or (not |463|) |464|))
(assert (or (not |occurs(end(generate),1)|) |465|))
(assert (or (not |occurs(end(generate),2)|) |465|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(end(generate),2)|) |466|))
(assert (or (not |465|) |467| |466|))
(assert (or (not |469|) |hold_s(inprogr(refuel(tank1)),1)|))
(assert (or (not |469|) (not |holds(inprogr(refuel(tank1)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),1)|) |469| |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) |occurs(end(refuel(tank1)),1)| |469|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |470|) |hold_s(inprogr(refuel(tank2)),1)|))
(assert (or (not |470|) (not |holds(inprogr(refuel(tank2)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),1)|) |470| |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) |occurs(end(refuel(tank2)),1)| |470|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |471|) |hold_s(inprogr(refuel(tank3)),1)|))
(assert (or (not |471|) (not |holds(inprogr(refuel(tank3)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),1)|) |471| |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) |occurs(end(refuel(tank3)),1)| |471|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |472|) |hold_s(inprogr(refuel(tank4)),1)|))
(assert (or (not |472|) (not |holds(inprogr(refuel(tank4)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),1)|) |472| |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) |occurs(end(refuel(tank4)),1)| |472|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |473|) |hold_s(inprogr(refuel(tank5)),1)|))
(assert (or (not |473|) (not |holds(inprogr(refuel(tank5)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),1)|) |473| |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) |occurs(end(refuel(tank5)),1)| |473|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |474|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |474|) (not |holds(inprogr(refuel(tank1)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) |474| |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),3)|) |occurs(end(refuel(tank1)),2)| |474|))
(assert (or (not |475|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |475|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(end(refuel(tank1)),2)|) |475|))
(assert (or (not |476|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |476|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) (not |occurs(end(refuel(tank1)),2)|) |476|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |475| |476|))
(assert (or (not |477|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |477|) (not |holds(inprogr(refuel(tank2)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) |477| |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank2)),3)|) |occurs(end(refuel(tank2)),2)| |477|))
(assert (or (not |478|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |478|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(end(refuel(tank2)),2)|) |478|))
(assert (or (not |479|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |479|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) (not |occurs(end(refuel(tank2)),2)|) |479|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |478| |479|))
(assert (or (not |480|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |480|) (not |holds(inprogr(refuel(tank3)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) |480| |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank3)),3)|) |occurs(end(refuel(tank3)),2)| |480|))
(assert (or (not |481|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |481|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(end(refuel(tank3)),2)|) |481|))
(assert (or (not |482|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |482|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) (not |occurs(end(refuel(tank3)),2)|) |482|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |481| |482|))
(assert (or (not |483|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |483|) (not |holds(inprogr(refuel(tank4)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) |483| |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank4)),3)|) |occurs(end(refuel(tank4)),2)| |483|))
(assert (or (not |484|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |484|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(end(refuel(tank4)),2)|) |484|))
(assert (or (not |485|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |485|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) (not |occurs(end(refuel(tank4)),2)|) |485|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |484| |485|))
(assert (or (not |486|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |486|) (not |holds(inprogr(refuel(tank5)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) |486| |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank5)),3)|) |occurs(end(refuel(tank5)),2)| |486|))
(assert (or (not |487|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |487|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(end(refuel(tank5)),2)|) |487|))
(assert (or (not |488|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |488|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) (not |occurs(end(refuel(tank5)),2)|) |488|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |487| |488|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |489|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |489|) (not |hold_s(inprogr(refuel(tank1)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |489| |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |occurs(start(refuel(tank1)),1)| |489|))
(assert (or (not |490|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |490|) (not |hold_s(inprogr(refuel(tank2)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |490| |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |occurs(start(refuel(tank2)),1)| |490|))
(assert (or (not |491|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |491|) (not |hold_s(inprogr(refuel(tank3)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |491| |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |occurs(start(refuel(tank3)),1)| |491|))
(assert (or (not |492|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |492|) (not |hold_s(inprogr(refuel(tank4)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |492| |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |occurs(start(refuel(tank4)),1)| |492|))
(assert (or (not |493|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |493|) (not |hold_s(inprogr(refuel(tank5)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |493| |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |occurs(start(refuel(tank5)),1)| |493|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) (not |hold_s(inprogr(refuel(tank1)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) (not |hold_s(inprogr(refuel(tank2)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) (not |hold_s(inprogr(refuel(tank3)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) (not |hold_s(inprogr(refuel(tank4)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) (not |hold_s(inprogr(refuel(tank5)),3)|)))
(assert (or (not |hold_s(generating,1)|) (not |holds(generating,1)|)))
(assert (or (not |holds(generating,1)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(inprogr(generate),1)|) (not |holds(inprogr(generate),1)|)))
(assert (or (not |holds(inprogr(generate),1)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),1)|) (not |holds(inprogr(refuel(tank1)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),1)|) (not |holds(inprogr(refuel(tank2)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),1)|) (not |holds(inprogr(refuel(tank3)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),1)|) (not |holds(inprogr(refuel(tank4)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),1)|) (not |holds(inprogr(refuel(tank5)),1)|)))
(assert (or (not |494|) |hold_s(generating,1)|))
(assert (or (not |494|) (not |holds(generating,2)|)))
(assert (or (not |hold_s(generating,1)|) |494| |holds(generating,2)|))
(assert (or (not |hold_s(generating,2)|) |494| |occurs(end(generate),1)|))
(assert (or (not |495|) |holds(generating,1)|))
(assert (or (not |495|) (not |hold_s(generating,2)|)))
(assert (or (not |holds(generating,1)|) |495| |hold_s(generating,2)|))
(assert (or (not |holds(generating,2)|) |occurs(start(generate),1)| |495|))
(assert (or (not |496|) |hold_s(inprogr(generate),1)|))
(assert (or (not |496|) (not |holds(inprogr(generate),2)|)))
(assert (or (not |hold_s(inprogr(generate),1)|) |496| |holds(inprogr(generate),2)|))
(assert (or (not |hold_s(inprogr(generate),2)|) |496| |occurs(end(generate),1)|))
(assert (or (not |497|) |holds(inprogr(generate),1)|))
(assert (or (not |497|) (not |hold_s(inprogr(generate),2)|)))
(assert (or (not |holds(inprogr(generate),1)|) |497| |hold_s(inprogr(generate),2)|))
(assert (or (not |holds(inprogr(generate),2)|) |occurs(start(generate),1)| |497|))
(assert (or (not |498|) |hold_s(generating,2)|))
(assert (or (not |498|) (not |holds(generating,3)|)))
(assert (or (not |hold_s(generating,2)|) |498| |holds(generating,3)|))
(assert (or (not |hold_s(generating,3)|) |498| |occurs(end(generate),2)|))
(assert (or (not |holds(generating,3)|) |holds(generating,2)|))
(assert (or (not |holds(generating,3)|) (not |hold_s(generating,3)|)))
(assert (or (not |499|) |hold_s(inprogr(generate),2)|))
(assert (or (not |499|) (not |holds(inprogr(generate),3)|)))
(assert (or (not |hold_s(inprogr(generate),2)|) |499| |holds(inprogr(generate),3)|))
(assert (or (not |hold_s(inprogr(generate),3)|) |499| |occurs(end(generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) |holds(inprogr(generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) (not |hold_s(inprogr(generate),3)|)))
(assert (or (not |occurs(end(generate),1)|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),1)|) |occurs(end(generate),1)|))
(assert (or (not |500|) |occurs(start(generate),0)|))
(assert (or (not |500|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(end(generate),2)|) |500|))
(assert (or (not |501|) |occurs(start(generate),1)|))
(assert (or (not |501|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),1)|) (not |occurs(end(generate),2)|) |501|))
(assert (or (not |occurs(end(generate),2)|) |500| |501|))
(assert (or (not |occurs(start(generate),1)|) |hold_s(generating,1)|))
(assert (or (not |occurs(start(generate),1)|) |occurs(start(generate),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))|) |occurs(end(generate),2)|))
(assert (or (not |completed(generate,2)|) |occurs(end(generate),1)|))
(assert (or (not |completed(generate,3)|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(stime(generate),end(0)))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(stime(generate),end(1)))|) |occurs(start(generate),1)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),1)|) |holds(inprogr(generate),1)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),2)|) |holds(inprogr(generate),2)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),3)|) |holds(inprogr(generate),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))|) (not |ab(contrib(fuel_level,decr,generate),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))|) (not |ab(contrib(fuel_level,decr,generate),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))|) (not |ab(contrib(fuel_level,decr,generate),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(generate),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(generate),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(generate),3)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,0),0))|) |required_false(geq_flevel_0,0)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,1),0))|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |hold_s(generating,1)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,2),0))|) |required_false(geq_flevel_0,2)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |hold_s(generating,2)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |required_false(geq_flevel_0,2)|))
(assert (or (not |502|) |occurs(end(generate),1)|))
(assert (or (not |502|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),0)|) |502|))
(assert (or (not |503|) |occurs(end(generate),2)|))
(assert (or (not |503|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),0)|) |503|))
(assert (or (not |504|) |occurs(end(generate),1)|))
(assert (or (not |504|) |occurs(start(generate),1)|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),1)|) |504|))
(assert (or (not |505|) |occurs(end(generate),2)|))
(assert (or (not |505|) |occurs(start(generate),1)|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),1)|) |505|))
(assert (or (not |cspvar(adur(generate),0,1000)|) |502| |503| |504| |505|))
(assert (or (not |506|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |506|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),0)|) |506|))
(assert (or (not |507|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |507|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),0)|) |507|))
(assert (or (not |508|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |508|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),1)|) |508|))
(assert (or (not |509|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |509|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),1)|) |509|))
(assert (or (not |cspvar(adur(refuel(tank1)),0,1000)|) |506| |507| |508| |509|))
(assert (or (not |510|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |510|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),0)|) |510|))
(assert (or (not |511|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |511|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),0)|) |511|))
(assert (or (not |512|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |512|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),1)|) |512|))
(assert (or (not |513|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |513|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),1)|) |513|))
(assert (or (not |cspvar(adur(refuel(tank2)),0,1000)|) |510| |511| |512| |513|))
(assert (or (not |514|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |514|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),0)|) |514|))
(assert (or (not |515|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |515|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),0)|) |515|))
(assert (or (not |516|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |516|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),1)|) |516|))
(assert (or (not |517|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |517|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),1)|) |517|))
(assert (or (not |cspvar(adur(refuel(tank3)),0,1000)|) |514| |515| |516| |517|))
(assert (or (not |518|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |518|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),0)|) |518|))
(assert (or (not |519|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |519|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),0)|) |519|))
(assert (or (not |520|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |520|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),1)|) |520|))
(assert (or (not |521|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |521|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),1)|) |521|))
(assert (or (not |cspvar(adur(refuel(tank4)),0,1000)|) |518| |519| |520| |521|))
(assert (or (not |522|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |522|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),0)|) |522|))
(assert (or (not |523|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |523|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),0)|) |523|))
(assert (or (not |524|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |524|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),1)|) |524|))
(assert (or (not |525|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |525|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),1)|) |525|))
(assert (or (not |cspvar(adur(refuel(tank5)),0,1000)|) |522| |523| |524| |525|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|) |occurs(start(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|) |occurs(start(generate),1)|))
(assert (or (not |319|) |occurs(start(refuel(tank1)),0)| |occurs(start(refuel(tank2)),0)| |occurs(start(refuel(tank3)),0)| |occurs(start(refuel(tank4)),0)| |occurs(start(refuel(tank5)),0)| |occurs(start(generate),0)|))
(assert (or (not |320|) |occurs(start(refuel(tank1)),1)| |occurs(start(refuel(tank2)),1)| |occurs(start(refuel(tank3)),1)| |occurs(start(refuel(tank4)),1)| |occurs(start(refuel(tank5)),1)| |occurs(end(refuel(tank1)),1)| |occurs(end(refuel(tank2)),1)| |occurs(end(refuel(tank3)),1)| |occurs(end(refuel(tank4)),1)| |occurs(end(refuel(tank5)),1)| |occurs(start(generate),1)| |occurs(end(generate),1)|))
(assert (or (not |321|) |occurs(end(refuel(tank1)),2)| |occurs(end(refuel(tank2)),2)| |occurs(end(refuel(tank3)),2)| |occurs(end(refuel(tank4)),2)| |occurs(end(refuel(tank5)),2)| |occurs(end(generate),2)|))
(assert (or (not |some_action(0)|) |319|))
(assert (or (not |some_action(1)|) |320|))
(assert (or (not |some_action(2)|) |321|))
(assert (or (not |completed(generate)|) |completed(generate,2)| |completed(generate,3)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |completed(refuel(tank1),2)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |completed(refuel(tank2),2)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |completed(refuel(tank3),2)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |completed(refuel(tank4),2)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |completed(refuel(tank5),2)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |completed(refuel(tank1),3)|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |completed(refuel(tank2),3)|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |completed(refuel(tank3),3)|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |completed(refuel(tank4),3)|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |completed(refuel(tank5),3)|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank1)),end(0)))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank2)),end(0)))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank3)),end(0)))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank4)),end(0)))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank5)),end(0)))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank1)),end(1)))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank2)),end(1)))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank3)),end(1)))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank4)),end(1)))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank5)),end(1)))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),1)|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),1)|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),1)|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),1)|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),1)|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),2)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),2)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),2)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),2)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),2)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),3)|) |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),3)|) |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),3)|) |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),3)|) |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),3)|) |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |442|) |occurs(end(refuel(tank1)),1)| |occurs(end(refuel(tank1)),2)|))
(assert (or (not |443|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |443|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |444|) |442|))
(assert (or (not |444|) (not |443|)))
(assert (or (not |446|) |occurs(end(refuel(tank2)),1)| |occurs(end(refuel(tank2)),2)|))
(assert (or (not |447|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |447|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |448|) |446|))
(assert (or (not |448|) (not |447|)))
(assert (or (not |449|) |occurs(end(refuel(tank3)),1)| |occurs(end(refuel(tank3)),2)|))
(assert (or (not |450|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |450|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |451|) |449|))
(assert (or (not |451|) (not |450|)))
(assert (or (not |452|) |occurs(end(refuel(tank4)),1)| |occurs(end(refuel(tank4)),2)|))
(assert (or (not |453|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |453|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |454|) |452|))
(assert (or (not |454|) (not |453|)))
(assert (or (not |455|) |occurs(end(refuel(tank5)),1)| |occurs(end(refuel(tank5)),2)|))
(assert (or (not |456|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |456|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |457|) |455|))
(assert (or (not |457|) (not |456|)))
(assert (or (not |458|) |occurs(start(generate),0)| |required_false(geq_flevel_0,0)|))
(assert (or (not |459|) |458|))
(assert (or (not |460|) |occurs(start(generate),1)| |required_false(geq_flevel_0,1)|))
(assert (or (not |461|) |occurs(start(generate),1)|))
(assert (or (not |461|) |required_false(geq_flevel_0,1)|))
(assert (or (not |462|) |460|))
(assert (or (not |462|) (not |461|)))
(assert (or (not |463|) |required_false(geq_flevel_0,2)|))
(assert (or (not |464|) |463|))
(assert (or (not |465|) |occurs(end(generate),1)| |occurs(end(generate),2)|))
(assert (or (not |466|) |occurs(end(generate),1)|))
(assert (or (not |466|) |occurs(end(generate),2)|))
(assert (or (not |467|) |465|))
(assert (or (not |467|) (not |466|)))
(assert |duration(generate,1000)|)
(assert |tankcap(1000)|)
(assert |tanklv(920)|)
(assert |refuel_tank(tank1)|)
(assert |refuel_tank(tank2)|)
(assert |refuel_tank(tank3)|)
(assert |refuel_tank(tank4)|)
(assert |refuel_tank(tank5)|)
(assert |cspdomain(r)|)
(assert |fluent(inprogr(generate))|)
(assert |fluent(generating)|)
(assert |hold_s(generating,0)|)
(assert |cspvar(stime(generate),0,1000)|)
(assert |required(ezcsp__geq(stime(generate),0))|)
(assert |action(start(generate))|)
(assert |action(end(generate))|)
(assert |restricted_ineq(lp)|)
(assert |restricted_ineq(nlp)|)
(assert |required(ezcsp__eq(start(0),0))|)
(assert |hold_s(inprogr(generate),0)|)
(assert |step(0)|)
(assert |step(1)|)
(assert |step(2)|)
(assert |step(3)|)
(assert |maxintval(1000)|)
(assert |cap(tank1,20)|)
(assert |cap(tank2,20)|)
(assert |cap(tank3,20)|)
(assert |cap(tank4,20)|)
(assert |cap(tank5,20)|)
(assert |duration(refuel(tank1),10)|)
(assert |duration(refuel(tank2),10)|)
(assert |duration(refuel(tank3),10)|)
(assert |duration(refuel(tank4),10)|)
(assert |duration(refuel(tank5),10)|)
(assert |cspvar(start(0),0,1000)|)
(assert |cspvar(start(1),0,1000)|)
(assert |cspvar(start(2),0,1000)|)
(assert |cspvar(start(3),0,1000)|)
(assert |required(ezcsp__geq(start(0),0))|)
(assert |required(ezcsp__geq(start(1),0))|)
(assert |required(ezcsp__geq(start(2),0))|)
(assert |required(ezcsp__geq(start(3),0))|)
(assert |cspvar(end(0),0,1000)|)
(assert |cspvar(end(1),0,1000)|)
(assert |cspvar(end(2),0,1000)|)
(assert |cspvar(end(3),0,1000)|)
(assert |required(ezcsp__geq(end(0),0))|)
(assert |required(ezcsp__geq(end(1),0))|)
(assert |required(ezcsp__geq(end(2),0))|)
(assert |required(ezcsp__geq(end(3),0))|)
(assert |required(ezcsp__eq(start(1),end(0)))|)
(assert |required(ezcsp__eq(start(2),end(1)))|)
(assert |required(ezcsp__eq(start(3),end(2)))|)
(assert |required(ezcsp__geq(end(0),start(0)))|)
(assert |required(ezcsp__geq(end(1),start(1)))|)
(assert |required(ezcsp__geq(end(2),start(2)))|)
(assert |required(ezcsp__geq(end(3),start(3)))|)
(assert |hold_s(inprogr(refuel(tank1)),0)|)
(assert |hold_s(inprogr(refuel(tank2)),0)|)
(assert |hold_s(inprogr(refuel(tank3)),0)|)
(assert |hold_s(inprogr(refuel(tank4)),0)|)
(assert |hold_s(inprogr(refuel(tank5)),0)|)
(assert |fluent(inprogr(refuel(tank1)))|)
(assert |fluent(inprogr(refuel(tank2)))|)
(assert |fluent(inprogr(refuel(tank3)))|)
(assert |fluent(inprogr(refuel(tank4)))|)
(assert |fluent(inprogr(refuel(tank5)))|)
(assert |cspvar(v_initial(fuel_level,0),0,1000)|)
(assert |cspvar(v_initial(fuel_level,1),0,1000)|)
(assert |cspvar(v_initial(fuel_level,2),0,1000)|)
(assert |cspvar(v_initial(fuel_level,3),0,1000)|)
(assert |required(ezcsp__geq(v_initial(fuel_level,0),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,1),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,2),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,3),0))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,0),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,1),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,2),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,3),1000))|)
(assert |cspvar(v_final(fuel_level,0),0,1000)|)
(assert |cspvar(v_final(fuel_level,1),0,1000)|)
(assert |cspvar(v_final(fuel_level,2),0,1000)|)
(assert |cspvar(v_final(fuel_level,3),0,1000)|)
(assert |required(ezcsp__geq(v_final(fuel_level,0),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,1),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,2),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,3),0))|)
(assert |required(ezcsp__leq(v_final(fuel_level,0),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,1),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,2),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,3),1000))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))|)
(assert |cspvar(v(contrib(fuel_level,incr),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),3),0,1000)|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),3),0,1000)|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank1)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank2)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank3)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank4)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank5)),0))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank1)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank2)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank3)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank4)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank5)),1))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank1)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank2)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank3)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank4)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank5)),2))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank1)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank2)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank3)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank4)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank5)),3))|)
(assert |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))|)
(assert |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))|)
(assert |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))|)
(assert |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))|)
(assert |cspvar(v(contrib(fuel_level,decr),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),3),0,1000)|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),3),0,1000)|)
(assert |decr(0,v(contrib(fuel_level,decr,generate),0))|)
(assert |decr(1,v(contrib(fuel_level,decr,generate),1))|)
(assert |decr(2,v(contrib(fuel_level,decr,generate),2))|)
(assert |decr(3,v(contrib(fuel_level,decr,generate),3))|)
(assert |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))|)
(assert |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))|)
(assert |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))|)
(assert |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))|)
(assert |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))|)
(assert (not |242|))
(assert |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))|)
(assert |action(end(refuel(tank1)))|)
(assert |action(end(refuel(tank2)))|)
(assert |action(end(refuel(tank3)))|)
(assert |action(end(refuel(tank4)))|)
(assert |action(end(refuel(tank5)))|)
(assert |action(start(refuel(tank1)))|)
(assert |action(start(refuel(tank2)))|)
(assert |action(start(refuel(tank3)))|)
(assert |action(start(refuel(tank4)))|)
(assert |action(start(refuel(tank5)))|)
(assert |maction(generate)|)
(assert |maction(refuel(tank1))|)
(assert |maction(refuel(tank2))|)
(assert |maction(refuel(tank3))|)
(assert |maction(refuel(tank4))|)
(assert |maction(refuel(tank5))|)
(assert |cspvar(dur(0),0,1000)|)
(assert |cspvar(dur(1),0,1000)|)
(assert |cspvar(dur(2),0,1000)|)
(assert |cspvar(dur(3),0,1000)|)
(assert |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))|)
(assert |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))|)
(assert |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))|)
(assert |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))|)
(assert |319|)
(assert |320|)
(assert |321|)
(assert |some_action(0)|)
(assert |some_action(1)|)
(assert |some_action(2)|)
(assert |cspvar(stime(refuel(tank1)),0,1000)|)
(assert |cspvar(stime(refuel(tank2)),0,1000)|)
(assert |cspvar(stime(refuel(tank3)),0,1000)|)
(assert |cspvar(stime(refuel(tank4)),0,1000)|)
(assert |cspvar(stime(refuel(tank5)),0,1000)|)
(assert |required(ezcsp__geq(stime(refuel(tank1)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank2)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank3)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank4)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank5)),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,0),920))|)
(assert |437|)
(assert |438|)
(assert |439|)
(assert |440|)
(assert |441|)
(assert |445|)
(assert |458|)
(assert |459|)
(assert |468|)
(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),2)|))

(declare-fun |adur(refuel(tank4))| () Real)
(assert (<= 0 |adur(refuel(tank4))|))
(assert (>= 1000 |adur(refuel(tank4))|))

(declare-fun |start(2)| () Real)
(assert (<= 0 |start(2)|))
(assert (>= 1000 |start(2)|))

(declare-fun |start(1)| () Real)
(assert (<= 0 |start(1)|))
(assert (>= 1000 |start(1)|))

(declare-fun |v_initial(fuel_level,2)| () Real)
(assert (<= 0 |v_initial(fuel_level,2)|))
(assert (>= 1000 |v_initial(fuel_level,2)|))

(declare-fun |v(contrib(fuel_level,incr),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),2)|))

(declare-fun |adur(generate)| () Real)
(assert (<= 0 |adur(generate)|))
(assert (>= 1000 |adur(generate)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),2)|))

(declare-fun |stime(refuel(tank4))| () Real)
(assert (<= 0 |stime(refuel(tank4))|))
(assert (>= 1000 |stime(refuel(tank4))|))

(declare-fun |v_initial(fuel_level,1)| () Real)
(assert (<= 0 |v_initial(fuel_level,1)|))
(assert (>= 1000 |v_initial(fuel_level,1)|))

(declare-fun |stime(refuel(tank2))| () Real)
(assert (<= 0 |stime(refuel(tank2))|))
(assert (>= 1000 |stime(refuel(tank2))|))

(declare-fun |v_final(fuel_level,2)| () Real)
(assert (<= 0 |v_final(fuel_level,2)|))
(assert (>= 1000 |v_final(fuel_level,2)|))

(declare-fun |adur(refuel(tank3))| () Real)
(assert (<= 0 |adur(refuel(tank3))|))
(assert (>= 1000 |adur(refuel(tank3))|))

(declare-fun |adur(refuel(tank2))| () Real)
(assert (<= 0 |adur(refuel(tank2))|))
(assert (>= 1000 |adur(refuel(tank2))|))

(declare-fun |v(contrib(fuel_level,incr),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),1)|))

(declare-fun |v(contrib(fuel_level,decr,generate),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),2)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),3)|))

(declare-fun |adur(refuel(tank5))| () Real)
(assert (<= 0 |adur(refuel(tank5))|))
(assert (>= 1000 |adur(refuel(tank5))|))

(declare-fun |stime(refuel(tank1))| () Real)
(assert (<= 0 |stime(refuel(tank1))|))
(assert (>= 1000 |stime(refuel(tank1))|))

(declare-fun |v(contrib(fuel_level,incr),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),1)|))

(declare-fun |v(contrib(fuel_level,decr,generate),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),3)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),3)|))

(declare-fun |v(contrib(fuel_level,decr,generate),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),0)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),0)|))

(declare-fun |stime(generate)| () Real)
(assert (<= 0 |stime(generate)|))
(assert (>= 1000 |stime(generate)|))

(declare-fun |end(3)| () Real)
(assert (<= 0 |end(3)|))
(assert (>= 1000 |end(3)|))

(declare-fun |start(3)| () Real)
(assert (<= 0 |start(3)|))
(assert (>= 1000 |start(3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),0)|))

(declare-fun |v(contrib(fuel_level,decr),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),2)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),2)|))

(declare-fun |v(contrib(fuel_level,decr),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),1)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),1)|))

(declare-fun |adur(refuel(tank1))| () Real)
(assert (<= 0 |adur(refuel(tank1))|))
(assert (>= 1000 |adur(refuel(tank1))|))

(declare-fun |v(contrib(fuel_level,incr),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),1)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),3)|))

(declare-fun |dur(3)| () Real)
(assert (<= 0 |dur(3)|))
(assert (>= 1000 |dur(3)|))

(declare-fun |v_final(fuel_level,1)| () Real)
(assert (<= 0 |v_final(fuel_level,1)|))
(assert (>= 1000 |v_final(fuel_level,1)|))

(declare-fun |v(contrib(fuel_level,decr),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),0)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),0)|))

(declare-fun |v_initial(fuel_level,0)| () Real)
(assert (<= 0 |v_initial(fuel_level,0)|))
(assert (>= 1000 |v_initial(fuel_level,0)|))

(declare-fun |v(contrib(fuel_level,decr,generate),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),1)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),1)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),2)|))

(declare-fun |dur(1)| () Real)
(assert (<= 0 |dur(1)|))
(assert (>= 1000 |dur(1)|))

(declare-fun |end(2)| () Real)
(assert (<= 0 |end(2)|))
(assert (>= 1000 |end(2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),1)|))

(declare-fun |start(0)| () Real)
(assert (<= 0 |start(0)|))
(assert (>= 1000 |start(0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),3)|))

(declare-fun |dur(0)| () Real)
(assert (<= 0 |dur(0)|))
(assert (>= 1000 |dur(0)|))

(declare-fun |end(1)| () Real)
(assert (<= 0 |end(1)|))
(assert (>= 1000 |end(1)|))

(declare-fun |stime(refuel(tank3))| () Real)
(assert (<= 0 |stime(refuel(tank3))|))
(assert (>= 1000 |stime(refuel(tank3))|))

(declare-fun |v_final(fuel_level,3)| () Real)
(assert (<= 0 |v_final(fuel_level,3)|))
(assert (>= 1000 |v_final(fuel_level,3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),3)|))

(declare-fun |end(0)| () Real)
(assert (<= 0 |end(0)|))
(assert (>= 1000 |end(0)|))

(declare-fun |v_final(fuel_level,0)| () Real)
(assert (<= 0 |v_final(fuel_level,0)|))
(assert (>= 1000 |v_final(fuel_level,0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),2)|))

(declare-fun |v_initial(fuel_level,3)| () Real)
(assert (<= 0 |v_initial(fuel_level,3)|))
(assert (>= 1000 |v_initial(fuel_level,3)|))

(declare-fun |dur(2)| () Real)
(assert (<= 0 |dur(2)|))
(assert (>= 1000 |dur(2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),1)|))

(declare-fun |stime(refuel(tank5))| () Real)
(assert (<= 0 |stime(refuel(tank5))|))
(assert (>= 1000 |stime(refuel(tank5))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),1)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),0)|))

(declare-fun |v(contrib(fuel_level,decr),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),3)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),3)|))

(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank3))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank3))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank4)),end(1)))| (= |stime(refuel(tank4))|  |end(1)| )))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,2),1000))| (<= |v_final(fuel_level,2)|  1000)))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))| (= |adur(generate)| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,2),0))| (>= |v_final(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__geq(end(2),0))| (>= |end(2)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))| (= |v(contrib(fuel_level,decr,generate),0)|  |v(contrib(fuel_level,decr),0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),2)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank3))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,1),0))| (>= |v_initial(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,0),1000))| (<= |v_final(fuel_level,0)|  1000)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,2),1000))| (<= |v_initial(fuel_level,2)|  1000)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank2))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank5))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),0)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank3)),end(1)))| (= |stime(refuel(tank3))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(stime(refuel(tank2)),end(0)))| (= |stime(refuel(tank2))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))| (=(- |end(1)|  |stime(refuel(tank4))| ) 10)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,decr,generate),1)| (* 1(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),2)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank2))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))| (= |adur(generate)| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))| (= |v(contrib(fuel_level,decr,generate),1)|  |v(contrib(fuel_level,decr),1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank2))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))| (>= |v(contrib(fuel_level,decr),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),2)|  0)))
(assert (=> |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank4)),2)|  |v(contrib(fuel_level,incr,refuel(tank5)),2)|  |v(contrib(fuel_level,incr,refuel(tank2)),2)|  |v(contrib(fuel_level,incr,refuel(tank1)),2)|  |v(contrib(fuel_level,incr,refuel(tank3)),2)| ) |v(contrib(fuel_level,incr),2)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank1))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,3),0))| (>= |v_initial(fuel_level,3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),1)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank1))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,3),1000))| (<= |v_final(fuel_level,3)|  1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank5))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank1)),end(1)))| (= |stime(refuel(tank1))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))| (= |v_final(fuel_level,3)| (-(+ |v_initial(fuel_level,3)|  |v(contrib(fuel_level,incr),3)| ) |v(contrib(fuel_level,decr),3)| ))))
(assert (=> |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank1)),3)|  |v(contrib(fuel_level,incr,refuel(tank5)),3)|  |v(contrib(fuel_level,incr,refuel(tank3)),3)|  |v(contrib(fuel_level,incr,refuel(tank2)),3)|  |v(contrib(fuel_level,incr,refuel(tank4)),3)| ) |v(contrib(fuel_level,incr),3)| )))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank5))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank4)),end(0)))| (= |stime(refuel(tank4))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))| (=(- |end(2)|  |stime(generate)| ) 1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,decr,generate),3)| (* 1(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),0)|  0)))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))| (= |v_final(fuel_level,1)| (-(+ |v_initial(fuel_level,1)|  |v(contrib(fuel_level,incr),1)| ) |v(contrib(fuel_level,decr),1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,decr,generate),2)| (* 1(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank2)),end(1)))| (= |stime(refuel(tank2))|  |end(1)| )))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,1),1000))| (<= |v_final(fuel_level,1)|  1000)))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,2),0))| (< |v_final(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))| (>= |v(contrib(fuel_level,decr),3)|  0)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,1),1000))| (<= |v_initial(fuel_level,1)|  1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),3)|  0)))
(assert (=> |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank3)),0)|  |v(contrib(fuel_level,incr,refuel(tank5)),0)|  |v(contrib(fuel_level,incr,refuel(tank2)),0)|  |v(contrib(fuel_level,incr,refuel(tank1)),0)|  |v(contrib(fuel_level,incr,refuel(tank4)),0)| ) |v(contrib(fuel_level,incr),0)| )))
(assert (=> |required(ezcsp__eq(stime(refuel(tank3)),end(0)))| (= |stime(refuel(tank3))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| (= |v(contrib(fuel_level,decr,generate),2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))| (>= |v(contrib(fuel_level,decr),1)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))| (= |v_initial(fuel_level,1)|  |v_final(fuel_level,0)| )))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))| (=(- |end(1)|  |stime(refuel(tank5))| ) 10)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank4))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))| (>= |v(contrib(fuel_level,incr),2)|  0)))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,1),0))| (>= |v_final(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),1)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))| (= |v_initial(fuel_level,2)|  |v_final(fuel_level,1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),3)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank5)),end(0)))| (= |stime(refuel(tank5))|  |end(0)| )))
(assert (=> |required(ezcsp__geq(start(2),0))| (>= |start(2)|  0)))
(assert (=> |required(ezcsp__geq(stime(generate),0))| (>= |stime(generate)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank1))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank4))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))| (=(- |end(2)|  |stime(refuel(tank1))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),1)|  0)))
(assert (=> |required(ezcsp__geq(start(0),0))| (>= |start(0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(start(3),end(2)))| (= |start(3)|  |end(2)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| (= |v(contrib(fuel_level,decr,generate),1)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank5)),0))| (>= |stime(refuel(tank5))|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))| (>= |v(contrib(fuel_level,decr,generate),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))| (=(- |end(2)|  |stime(refuel(tank5))| ) 10)))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,3),0))| (>= |v_final(fuel_level,3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank4))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(stime(generate),end(0)))| (= |stime(generate)|  |end(0)| )))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,1),0))| (< |v_final(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| (= |v(contrib(fuel_level,decr,generate),3)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,0),920))| (= |v_initial(fuel_level,0)|  920)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,3),1000))| (<= |v_initial(fuel_level,3)|  1000)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))| (=(- |end(1)|  |stime(refuel(tank1))| ) 10)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))| (=(- |end(2)|  |stime(refuel(tank2))| ) 10)))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,0),0))| (>= |v_initial(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))| (= |v(contrib(fuel_level,decr,generate),2)|  |v(contrib(fuel_level,decr),2)| )))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))| (= |adur(generate)| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank4))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(end(0),start(0)))| (>= |end(0)|  |start(0)| )))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))| (= |v_final(fuel_level,0)| (-(+ |v_initial(fuel_level,0)|  |v(contrib(fuel_level,incr),0)| ) |v(contrib(fuel_level,decr),0)| ))))
(assert (=> |required(ezcsp__geq(end(2),start(2)))| (>= |end(2)|  |start(2)| )))
(assert (=> |required(ezcsp__geq(end(3),0))| (>= |end(3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank2))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(start(3),0))| (>= |start(3)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))| (= |v_initial(fuel_level,3)|  |v_final(fuel_level,2)| )))
(assert (=> |required(ezcsp__eq(start(0),0))| (= |start(0)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank1)),end(0)))| (= |stime(refuel(tank1))|  |end(0)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),2)|  0)))
(assert (=> |required(ezcsp__geq(end(1),0))| (>= |end(1)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))| (=(- |end(1)|  |stime(refuel(tank3))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))| (>= |v(contrib(fuel_level,incr),3)|  0)))
(assert (=> |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))| (= |dur(3)| (- |end(3)|  |start(3)| ))))
(assert (=> |required(ezcsp__geq(stime(refuel(tank1)),0))| (>= |stime(refuel(tank1))|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank3)),0))| (>= |stime(refuel(tank3))|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))| (=(- |end(1)|  |stime(refuel(tank2))| ) 10)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank1))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,0),0))| (< |v_final(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,2),0))| (>= |v_initial(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))| (= |adur(generate)| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(end(1),start(1)))| (>= |end(1)|  |start(1)| )))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank5))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__geq(stime(refuel(tank4)),0))| (>= |stime(refuel(tank4))|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),3)|  0)))
(assert (=> |required(ezcsp__eq(start(1),end(0)))| (= |start(1)|  |end(0)| )))
(assert (=> |required(ezcsp__eq(stime(generate),end(1)))| (= |stime(generate)|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),3)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))| (= |v(contrib(fuel_level,decr,generate),3)|  |v(contrib(fuel_level,decr),3)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__geq(end(0),0))| (>= |end(0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank3))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))| (= |dur(1)| (- |end(1)|  |start(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),1)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank2)),0))| (>= |stime(refuel(tank2))|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))| (>= |v(contrib(fuel_level,decr),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))| (=(- |end(2)|  |stime(refuel(tank4))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))| (>= |v(contrib(fuel_level,incr),0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),0)|  0)))
(assert (=> |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))| (= |dur(0)| (- |end(0)|  |start(0)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))| (=(- |end(2)|  |stime(refuel(tank3))| ) 10)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),2)|  0)))
(assert (=> |required(ezcsp__geq(start(1),0))| (>= |start(1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))| (>= |v(contrib(fuel_level,decr,generate),1)|  0)))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))| (= |v_final(fuel_level,2)| (-(+ |v_initial(fuel_level,2)|  |v(contrib(fuel_level,incr),2)| ) |v(contrib(fuel_level,decr),2)| ))))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,0),0))| (>= |v_final(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))| (>= |v(contrib(fuel_level,decr,generate),3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))| (>= |v(contrib(fuel_level,decr,generate),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),1)|  0)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,0),1000))| (<= |v_initial(fuel_level,0)|  1000)))
(assert (=> |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))| (= |dur(2)| (- |end(2)|  |start(2)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank5)),end(1)))| (= |stime(refuel(tank5))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))| (= |v(contrib(fuel_level,decr,generate),0)|  0)))
(assert (=> |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank4)),1)|  |v(contrib(fuel_level,incr,refuel(tank2)),1)|  |v(contrib(fuel_level,incr,refuel(tank3)),1)|  |v(contrib(fuel_level,incr,refuel(tank5)),1)|  |v(contrib(fuel_level,incr,refuel(tank1)),1)| ) |v(contrib(fuel_level,incr),1)| )))
(assert (=> |required(ezcsp__geq(end(3),start(3)))| (>= |end(3)|  |start(3)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))| (=(- |end(1)|  |stime(generate)| ) 1000)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))| (>= |v(contrib(fuel_level,incr),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),2)|  0)))
(assert (=> |required(ezcsp__eq(start(2),end(1)))| (= |start(2)|  |end(1)| )))

; Check satisfiability
(check-sat)
(exit)
