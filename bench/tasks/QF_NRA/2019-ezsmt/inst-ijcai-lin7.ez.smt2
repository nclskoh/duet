(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Da Shen, Yuliya Lierler
Generated on: 2019-04-29
Generator: EZSMT+
Application: SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs [1]

[1] Da Shen and Yuliya Lierler. "SMT-based Constraint Answer Set Solver EZSMT+ for Non-tight Programs"
    16th International Conference on Principles of Knowledge Representation and Reasoning (2018)
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; --- END HEADER ---

; --- Including necessary SMT functions ---

(define-fun max ((x Real) (y Real)) Real
  (ite (< x y) y x))

(define-fun min ((x Real) (y Real)) Real
  (ite (< x y) x y))

; --- END INCLUDES ---

(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |completed(refuel(tank7),3)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank4)),end(1)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),3)| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,2),1000))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |fluent(inprogr(refuel(tank7)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),2),0,1000)| () Bool)
(declare-fun |completed(refuel(tank2),3)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,2),0))| () Bool)
(declare-fun |required(ezcsp__geq(end(2),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank7)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| () Bool)
(declare-fun |fluent(inprogr(refuel(tank5)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),2),0,1000)| () Bool)
(declare-fun |maction(refuel(tank1))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),3)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),3),0,1000)| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank4)),1))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank1)),3))| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,1),0))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank6)),2))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,0),1000))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank6)),2)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank6)),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),3)| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,2),1000))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),2)| () Bool)
(declare-fun |cspvar(adur(refuel(tank4)),0,1000)| () Bool)
(declare-fun |590| () Bool)
(declare-fun |593| () Bool)
(declare-fun |592| () Bool)
(declare-fun |595| () Bool)
(declare-fun |594| () Bool)
(declare-fun |597| () Bool)
(declare-fun |596| () Bool)
(declare-fun |599| () Bool)
(declare-fun |598| () Bool)
(declare-fun |holds(generating,2)| () Bool)
(declare-fun |584| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,2),0))| () Bool)
(declare-fun |cap(tank3,20)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),3)| () Bool)
(declare-fun |cspvar(start(2),0,1000)| () Bool)
(declare-fun |cspvar(start(1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| () Bool)
(declare-fun |tankcap(1000)| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,2),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),2),0,1000)| () Bool)
(declare-fun |maction(refuel(tank2))| () Bool)
(declare-fun |cspvar(adur(generate),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),0)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),2)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank2)),end(0)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),2),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),0),0,1000)| () Bool)
(declare-fun |cspvar(stime(refuel(tank4)),0,1000)| () Bool)
(declare-fun |refuel_tank(tank2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))| () Bool)
(declare-fun |occurs(end(refuel(tank3)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank6)),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),1)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank6)),2)| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank7)),3))| () Bool)
(declare-fun |641| () Bool)
(declare-fun |640| () Bool)
(declare-fun |643| () Bool)
(declare-fun |642| () Bool)
(declare-fun |645| () Bool)
(declare-fun |644| () Bool)
(declare-fun |647| () Bool)
(declare-fun |646| () Bool)
(declare-fun |649| () Bool)
(declare-fun |648| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |action(end(refuel(tank5)))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |holds(inprogr(generate),3)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |completed(refuel(tank4),3)| () Bool)
(declare-fun |occurs(end(refuel(tank4)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))| () Bool)
(declare-fun |duration(refuel(tank1),10)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))| () Bool)
(declare-fun |543| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,1),0,1000)| () Bool)
(declare-fun |cspvar(stime(refuel(tank2)),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank6)),1)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,2),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required_false(geq_flevel_0,0)| () Bool)
(declare-fun |cspvar(adur(refuel(tank3)),0,1000)| () Bool)
(declare-fun |553| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |cspvar(adur(refuel(tank2)),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank5)),3))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,3),1000))| () Bool)
(declare-fun |completed(refuel(tank6),2)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank5)),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank3)),end(1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),2),0,1000)| () Bool)
(declare-fun |559| () Bool)
(declare-fun |558| () Bool)
(declare-fun |555| () Bool)
(declare-fun |554| () Bool)
(declare-fun |557| () Bool)
(declare-fun |556| () Bool)
(declare-fun |551| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| () Bool)
(declare-fun |cspvar(stime(refuel(tank7)),0,1000)| () Bool)
(declare-fun |552| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank1)),end(1)))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),2)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),2),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))| () Bool)
(declare-fun |occurs(end(refuel(tank2)),2)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank4)),end(0)))| () Bool)
(declare-fun |holds(inprogr(refuel(tank7)),1)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))| () Bool)
(declare-fun |maction(refuel(tank3))| () Bool)
(declare-fun |618| () Bool)
(declare-fun |619| () Bool)
(declare-fun |step(0)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))| () Bool)
(declare-fun |612| () Bool)
(declare-fun |613| () Bool)
(declare-fun |610| () Bool)
(declare-fun |611| () Bool)
(declare-fun |616| () Bool)
(declare-fun |617| () Bool)
(declare-fun |614| () Bool)
(declare-fun |615| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),0),0,1000)| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank2)),1))| () Bool)
(declare-fun |completed(refuel(tank1),2)| () Bool)
(declare-fun |548| () Bool)
(declare-fun |fluent(inprogr(refuel(tank6)))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))| () Bool)
(declare-fun |occurs(start(refuel(tank5)),1)| () Bool)
(declare-fun |occurs(start(refuel(tank3)),1)| () Bool)
(declare-fun |decr(2,v(contrib(fuel_level,decr,generate),2))| () Bool)
(declare-fun |occurs(end(refuel(tank7)),1)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank2)),end(1)))| () Bool)
(declare-fun |occurs(end(refuel(tank3)),2)| () Bool)
(declare-fun |action(end(refuel(tank1)))| () Bool)
(declare-fun |required(ezcsp__leq(v_final(fuel_level,1),1000))| () Bool)
(declare-fun |refuel_tank(tank7)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(end(2),start(2)))| () Bool)
(declare-fun |restricted_ineq(nlp)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank4)),2))| () Bool)
(declare-fun |occurs(start(generate),1)| () Bool)
(declare-fun |hold_s(inprogr(generate),1)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),0),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),2)| () Bool)
(declare-fun |cspvar(adur(refuel(tank5)),0,1000)| () Bool)
(declare-fun |completed(generate)| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,2),0))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank3)),1))| () Bool)
(declare-fun |maction(refuel(tank6))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| () Bool)
(declare-fun |required(ezcsp__eq(start(1),end(0)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| () Bool)
(declare-fun |occurs(end(refuel(tank4)),1)| () Bool)
(declare-fun |completed(refuel(tank2),2)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),2),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,1),1000))| () Bool)
(declare-fun |some_action(2)| () Bool)
(declare-fun |cspvar(stime(refuel(tank1)),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| () Bool)
(declare-fun |hold_s(generating,0)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank7))),10))| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank3)),end(0)))| () Bool)
(declare-fun |duration(generate,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| () Bool)
(declare-fun |cspdomain(r)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| () Bool)
(declare-fun |cap(tank2,20)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))| () Bool)
(declare-fun |action(start(refuel(tank2)))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),3),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),3),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),2)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank7)),0))| () Bool)
(declare-fun |cap(tank4,20)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),3)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank6)),3)| () Bool)
(declare-fun |maction(refuel(tank4))| () Bool)
(declare-fun |586| () Bool)
(declare-fun |587| () Bool)
(declare-fun |holds(inprogr(refuel(tank6)),2)| () Bool)
(declare-fun |585| () Bool)
(declare-fun |582| () Bool)
(declare-fun |583| () Bool)
(declare-fun |580| () Bool)
(declare-fun |581| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),2)| () Bool)
(declare-fun |holds(generating,3)| () Bool)
(declare-fun |588| () Bool)
(declare-fun |589| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),1)| () Bool)
(declare-fun |cspvar(stime(generate),0,1000)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank3)))| () Bool)
(declare-fun |duration(refuel(tank6),10)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))| () Bool)
(declare-fun |cspvar(end(3),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),3)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),1)| () Bool)
(declare-fun |623| () Bool)
(declare-fun |622| () Bool)
(declare-fun |621| () Bool)
(declare-fun |620| () Bool)
(declare-fun |627| () Bool)
(declare-fun |626| () Bool)
(declare-fun |625| () Bool)
(declare-fun |624| () Bool)
(declare-fun |629| () Bool)
(declare-fun |628| () Bool)
(declare-fun |cspvar(start(3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),0),0,1000)| () Bool)
(declare-fun |refuel_tank(tank3)| () Bool)
(declare-fun |occurs(start(refuel(tank4)),1)| () Bool)
(declare-fun |completed(refuel(tank3),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank6)),1)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank6))),10))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank3)),3))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,1),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| () Bool)
(declare-fun |656| () Bool)
(declare-fun |657| () Bool)
(declare-fun |654| () Bool)
(declare-fun |655| () Bool)
(declare-fun |652| () Bool)
(declare-fun |653| () Bool)
(declare-fun |650| () Bool)
(declare-fun |651| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),2),0,1000)| () Bool)
(declare-fun |action(end(refuel(tank7)))| () Bool)
(declare-fun |hold_s(generating,3)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| () Bool)
(declare-fun |occurs(start(refuel(tank2)),0)| () Bool)
(declare-fun |completed(generate,2)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),0),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),1),0,1000)| () Bool)
(declare-fun |completed(refuel(tank4),2)| () Bool)
(declare-fun |occurs(start(refuel(tank1)),1)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),3)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))| () Bool)
(declare-fun |hold_s(inprogr(generate),2)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| () Bool)
(declare-fun |occurs(end(refuel(tank7)),2)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank5)),end(0)))| () Bool)
(declare-fun |some_action(0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),3)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| () Bool)
(declare-fun |required_false(geq_flevel_0,1)| () Bool)
(declare-fun |required(ezcsp__geq(start(2),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(generate),0))| () Bool)
(declare-fun |cap(tank1,20)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),2)| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |hold_s(generating,2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank7)),3)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank3)),0))| () Bool)
(declare-fun |cspvar(adur(refuel(tank1)),0,1000)| () Bool)
(declare-fun |some_action(1)| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),1)| () Bool)
(declare-fun |action(end(refuel(tank3)))| () Bool)
(declare-fun |holds(inprogr(generate),2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))| () Bool)
(declare-fun |maction(refuel(tank5))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),3),0,1000)| () Bool)
(declare-fun |maction(refuel(tank7))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank5)),2))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| () Bool)
(declare-fun |duration(refuel(tank7),10)| () Bool)
(declare-fun |action(start(refuel(tank4)))| () Bool)
(declare-fun |occurs(end(refuel(tank5)),1)| () Bool)
(declare-fun |required(ezcsp__geq(start(0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |required(ezcsp__eq(start(3),end(2)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank5)),0))| () Bool)
(declare-fun |occurs(start(refuel(tank5)),0)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))| () Bool)
(declare-fun |occurs(end(refuel(tank2)),1)| () Bool)
(declare-fun |maction(generate)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |decr(1,v(contrib(fuel_level,decr,generate),1))| () Bool)
(declare-fun |step(1)| () Bool)
(declare-fun |required(ezcsp__eq(stime(generate),end(0)))| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,1),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| () Bool)
(declare-fun |completed(refuel(tank1),3)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank7)),end(0)))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,3),1000))| () Bool)
(declare-fun |duration(refuel(tank3),10)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),2)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))| () Bool)
(declare-fun |546| () Bool)
(declare-fun |547| () Bool)
(declare-fun |544| () Bool)
(declare-fun |545| () Bool)
(declare-fun |completed(refuel(tank5),2)| () Bool)
(declare-fun |549| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))| () Bool)
(declare-fun |occurs(start(refuel(tank3)),0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),1)| () Bool)
(declare-fun |occurs(start(refuel(tank7)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v_initial(fuel_level,0),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |refuel_tank(tank4)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),0)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |occurs(start(generate),0)| () Bool)
(declare-fun |duration(refuel(tank4),10)| () Bool)
(declare-fun |duration(refuel(tank2),10)| () Bool)
(declare-fun |fluent(inprogr(refuel(tank4)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |cspvar(stime(refuel(tank6)),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(end(0),start(0)))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank5)),1))| () Bool)
(declare-fun |holds(inprogr(generate),1)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank3)),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank7)),2))| () Bool)
(declare-fun |required(ezcsp__geq(end(3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |cspvar(dur(3),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank7)),1)| () Bool)
(declare-fun |required(ezcsp__geq(start(3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))| () Bool)
(declare-fun |occurs(end(generate),1)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank6)),end(1)))| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank2)),3))| () Bool)
(declare-fun |cspvar(v_final(fuel_level,1),0,1000)| () Bool)
(declare-fun |381| () Bool)
(declare-fun |382| () Bool)
(declare-fun |383| () Bool)
(declare-fun |required(ezcsp__eq(start(0),0))| () Bool)
(declare-fun |fluent(inprogr(generate))| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank1)),end(0)))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,0),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank4)),3)| () Bool)
(declare-fun |required(ezcsp__geq(end(1),0))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |action(end(refuel(tank2)))| () Bool)
(declare-fun |holds(inprogr(refuel(tank6)),3)| () Bool)
(declare-fun |579| () Bool)
(declare-fun |578| () Bool)
(declare-fun |completed(refuel(tank5),3)| () Bool)
(declare-fun |573| () Bool)
(declare-fun |572| () Bool)
(declare-fun |571| () Bool)
(declare-fun |570| () Bool)
(declare-fun |577| () Bool)
(declare-fun |576| () Bool)
(declare-fun |575| () Bool)
(declare-fun |574| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),3),0,1000)| () Bool)
(declare-fun |cap(tank7,20)| () Bool)
(declare-fun |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),1)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank1)),0))| () Bool)
(declare-fun |action(end(refuel(tank6)))| () Bool)
(declare-fun |tanklv(880)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),2),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank4)),0)| () Bool)
(declare-fun |holds(inprogr(refuel(tank7)),3)| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),3)| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),2)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank5)),end(1)))| () Bool)
(declare-fun |630| () Bool)
(declare-fun |631| () Bool)
(declare-fun |632| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |634| () Bool)
(declare-fun |required(ezcsp__lt(v_final(fuel_level,0),0))| () Bool)
(declare-fun |636| () Bool)
(declare-fun |637| () Bool)
(declare-fun |638| () Bool)
(declare-fun |639| () Bool)
(declare-fun |occurs(end(refuel(tank1)),1)| () Bool)
(declare-fun |required(ezcsp__eq(v_initial(fuel_level,0),880))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |cspvar(dur(1),0,1000)| () Bool)
(declare-fun |completed(refuel(tank3),3)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank6)),0)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),2)| () Bool)
(declare-fun |occurs(start(refuel(tank6)),0)| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank4)),3))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),3)| () Bool)
(declare-fun |cspvar(end(2),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),1),0,1000)| () Bool)
(declare-fun |completed(generate,3)| () Bool)
(declare-fun |occurs(end(generate),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))| () Bool)
(declare-fun |cspvar(start(0),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),0),0,1000)| () Bool)
(declare-fun |occurs(start(refuel(tank1)),0)| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank2)),2))| () Bool)
(declare-fun |required(ezcsp__geq(end(1),start(1)))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))| () Bool)
(declare-fun |action(start(refuel(tank5)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank4)),0))| () Bool)
(declare-fun |hold_s(inprogr(generate),3)| () Bool)
(declare-fun |decr(0,v(contrib(fuel_level,decr,generate),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| () Bool)
(declare-fun |occurs(end(refuel(tank6)),2)| () Bool)
(declare-fun |required(ezcsp__eq(stime(generate),end(1)))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank3)),2))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |cspvar(adur(refuel(tank6)),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))| () Bool)
(declare-fun |completed(refuel(tank7),2)| () Bool)
(declare-fun |action(start(generate))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank7)),end(1)))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| () Bool)
(declare-fun |cspvar(adur(refuel(tank7)),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),3)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank7)),2)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| () Bool)
(declare-fun |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))| () Bool)
(declare-fun |cspvar(dur(0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__geq(end(0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))| () Bool)
(declare-fun |fluent(inprogr(refuel(tank2)))| () Bool)
(declare-fun |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))| () Bool)
(declare-fun |occurs(start(refuel(tank2)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank7)),2)| () Bool)
(declare-fun |required(ezcsp__geq(stime(refuel(tank2)),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))| () Bool)
(declare-fun |occurs(end(refuel(tank5)),2)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))| () Bool)
(declare-fun |restricted_ineq(lp)| () Bool)
(declare-fun |cspvar(stime(refuel(tank3)),0,1000)| () Bool)
(declare-fun |maxintval(1000)| () Bool)
(declare-fun |288| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank2)),1)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank7))),10))| () Bool)
(declare-fun |required_false(geq_flevel_0,2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank6)),1)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| () Bool)
(declare-fun |occurs(start(refuel(tank4)),0)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),1),0,1000)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,3),0,1000)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank2)),0))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank4)),2)| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank7)),1))| () Bool)
(declare-fun |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))| () Bool)
(declare-fun |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(1))))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank7)),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank3)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| () Bool)
(declare-fun |holds(inprogr(refuel(tank2)),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))| () Bool)
(declare-fun |incr(2,v(contrib(fuel_level,incr,refuel(tank1)),2))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank6))),10))| () Bool)
(declare-fun |action(end(refuel(tank4)))| () Bool)
(declare-fun |cap(tank5,20)| () Bool)
(declare-fun |required(ezcsp__eq(stime(refuel(tank6)),end(0)))| () Bool)
(declare-fun |holds(inprogr(refuel(tank5)),1)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank1)),0))| () Bool)
(declare-fun |action(start(refuel(tank7)))| () Bool)
(declare-fun |refuel_tank(tank5)| () Bool)
(declare-fun |fluent(generating)| () Bool)
(declare-fun |action(start(refuel(tank1)))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank6)),3)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| () Bool)
(declare-fun |required(ezcsp__geq(start(1),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))| () Bool)
(declare-fun |cspvar(end(0),0,1000)| () Bool)
(declare-fun |occurs(start(refuel(tank7)),0)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank7)),0)| () Bool)
(declare-fun |cspvar(v_final(fuel_level,0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank5)),0)| () Bool)
(declare-fun |required(ezcsp__geq(v_final(fuel_level,0),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),2),0,1000)| () Bool)
(declare-fun |action(end(generate))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank7)),1)| () Bool)
(declare-fun |cap(tank6,20)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),1),0,1000)| () Bool)
(declare-fun |completed(refuel(tank6),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| () Bool)
(declare-fun |cspvar(v_initial(fuel_level,3),0,1000)| () Bool)
(declare-fun |duration(refuel(tank5),10)| () Bool)
(declare-fun |ab(contrib(fuel_level,decr,generate),3)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))| () Bool)
(declare-fun |568| () Bool)
(declare-fun |569| () Bool)
(declare-fun |holds(generating,1)| () Bool)
(declare-fun |560| () Bool)
(declare-fun |561| () Bool)
(declare-fun |562| () Bool)
(declare-fun |563| () Bool)
(declare-fun |564| () Bool)
(declare-fun |565| () Bool)
(declare-fun |566| () Bool)
(declare-fun |567| () Bool)
(declare-fun |incr(3,v(contrib(fuel_level,incr,refuel(tank6)),3))| () Bool)
(declare-fun |cspvar(dur(2),0,1000)| () Bool)
(declare-fun |cspvar(end(1),0,1000)| () Bool)
(declare-fun |holds(inprogr(refuel(tank3)),1)| () Bool)
(declare-fun |required(ezcsp__leq(v_initial(fuel_level,0),1000))| () Bool)
(declare-fun |holds(inprogr(refuel(tank7)),2)| () Bool)
(declare-fun |cspvar(stime(refuel(tank5)),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))| () Bool)
(declare-fun |holds(inprogr(refuel(tank1)),2)| () Bool)
(declare-fun |605| () Bool)
(declare-fun |604| () Bool)
(declare-fun |607| () Bool)
(declare-fun |606| () Bool)
(declare-fun |601| () Bool)
(declare-fun |600| () Bool)
(declare-fun |603| () Bool)
(declare-fun |602| () Bool)
(declare-fun |step(3)| () Bool)
(declare-fun |609| () Bool)
(declare-fun |608| () Bool)
(declare-fun |refuel_tank(tank1)| () Bool)
(declare-fun |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))| () Bool)
(declare-fun |required(ezcsp__geq(end(3),start(3)))| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank6)),1))| () Bool)
(declare-fun |633| () Bool)
(declare-fun |incr(1,v(contrib(fuel_level,incr,refuel(tank1)),1))| () Bool)
(declare-fun |550| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| () Bool)
(declare-fun |action(start(refuel(tank3)))| () Bool)
(declare-fun |635| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),1),0,1000)| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| () Bool)
(declare-fun |occurs(start(refuel(tank6)),1)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank3)),2)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),0),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank1)),1)| () Bool)
(declare-fun |incr(0,v(contrib(fuel_level,incr,refuel(tank4)),0))| () Bool)
(declare-fun |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr,generate),0),0,1000)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),0),0,1000)| () Bool)
(declare-fun |step(2)| () Bool)
(declare-fun |ab(contrib(fuel_level,incr,refuel(tank5)),2)| () Bool)
(declare-fun |decr(3,v(contrib(fuel_level,decr,generate),3))| () Bool)
(declare-fun |hold_s(generating,1)| () Bool)
(declare-fun |591| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,decr),3),0,1000)| () Bool)
(declare-fun |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))| () Bool)
(declare-fun |refuel_tank(tank6)| () Bool)
(declare-fun |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),3),0,1000)| () Bool)
(declare-fun |hold_s(inprogr(refuel(tank2)),1)| () Bool)
(declare-fun |action(start(refuel(tank6)))| () Bool)
(declare-fun |hold_s(inprogr(generate),0)| () Bool)
(declare-fun |occurs(end(refuel(tank6)),1)| () Bool)
(declare-fun |occurs(end(refuel(tank1)),2)| () Bool)
(declare-fun |required(ezcsp__eq(start(2),end(1)))| () Bool)
(assert (or (not |occurs(end(refuel(tank1)),1)|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |583|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(end(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |584|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(end(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |585|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(end(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |586|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(end(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |587|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(end(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |hold_s(inprogr(refuel(tank6)),2)|))
(assert (or (not |588|) |hold_s(inprogr(refuel(tank6)),2)|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) (not |occurs(end(refuel(tank6)),1)|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |hold_s(inprogr(refuel(tank7)),2)|))
(assert (or (not |589|) |hold_s(inprogr(refuel(tank7)),2)|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) (not |occurs(end(refuel(tank7)),1)|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |590|) |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |591|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |592|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |593|) |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |594|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |595|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |596|) |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |597|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |598|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |599|) |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |600|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |601|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or (not |602|) |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or (not |603|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |604|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |hold_s(inprogr(refuel(tank6)),3)|))
(assert (or (not |605|) |hold_s(inprogr(refuel(tank6)),3)|))
(assert (or (not |606|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |607|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |hold_s(inprogr(refuel(tank7)),3)|))
(assert (or (not |608|) |hold_s(inprogr(refuel(tank7)),3)|))
(assert (or (not |609|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |610|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) |holds(inprogr(refuel(tank6)),1)|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) |holds(inprogr(refuel(tank7)),1)|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |611|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |612|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |613|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |614|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |615|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |616|) |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |617|) |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |holds(inprogr(refuel(tank1)),3)| |hold_s(inprogr(refuel(tank1)),3)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |holds(inprogr(refuel(tank2)),3)| |hold_s(inprogr(refuel(tank2)),3)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |holds(inprogr(refuel(tank3)),3)| |hold_s(inprogr(refuel(tank3)),3)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |holds(inprogr(refuel(tank4)),3)| |hold_s(inprogr(refuel(tank4)),3)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |holds(inprogr(refuel(tank5)),3)| |hold_s(inprogr(refuel(tank5)),3)|))
(assert (or (not |holds(inprogr(refuel(tank6)),2)|) |holds(inprogr(refuel(tank6)),3)| |hold_s(inprogr(refuel(tank6)),3)|))
(assert (or (not |holds(inprogr(refuel(tank7)),2)|) |holds(inprogr(refuel(tank7)),3)| |hold_s(inprogr(refuel(tank7)),3)|))
(assert (or |hold_s(generating,1)| |holds(generating,1)|))
(assert (or (not |occurs(start(generate),0)|) |holds(generating,1)|))
(assert (or |hold_s(inprogr(generate),1)| |holds(inprogr(generate),1)|))
(assert (or (not |occurs(start(generate),0)|) |holds(inprogr(generate),1)|))
(assert (or |hold_s(inprogr(refuel(tank1)),1)| |holds(inprogr(refuel(tank1)),1)|))
(assert (or |hold_s(inprogr(refuel(tank2)),1)| |holds(inprogr(refuel(tank2)),1)|))
(assert (or |hold_s(inprogr(refuel(tank3)),1)| |holds(inprogr(refuel(tank3)),1)|))
(assert (or |hold_s(inprogr(refuel(tank4)),1)| |holds(inprogr(refuel(tank4)),1)|))
(assert (or |hold_s(inprogr(refuel(tank5)),1)| |holds(inprogr(refuel(tank5)),1)|))
(assert (or |hold_s(inprogr(refuel(tank6)),1)| |holds(inprogr(refuel(tank6)),1)|))
(assert (or |hold_s(inprogr(refuel(tank7)),1)| |holds(inprogr(refuel(tank7)),1)|))
(assert (or (not |618|) |hold_s(generating,2)|))
(assert (or (not |occurs(end(generate),1)|) |hold_s(generating,2)|))
(assert (or (not |occurs(start(generate),1)|) |holds(generating,2)|))
(assert (or (not |619|) |holds(generating,2)|))
(assert (or (not |620|) |hold_s(inprogr(generate),2)|))
(assert (or (not |occurs(end(generate),1)|) |hold_s(inprogr(generate),2)|))
(assert (or (not |occurs(start(generate),1)|) |holds(inprogr(generate),2)|))
(assert (or (not |621|) |holds(inprogr(generate),2)|))
(assert (or (not |622|) |hold_s(generating,3)|))
(assert (or (not |occurs(end(generate),2)|) |hold_s(generating,3)|))
(assert (or (not |holds(generating,2)|) |holds(generating,3)| |hold_s(generating,3)|))
(assert (or (not |623|) |hold_s(inprogr(generate),3)|))
(assert (or (not |occurs(end(generate),2)|) |hold_s(inprogr(generate),3)|))
(assert (or (not |holds(inprogr(generate),2)|) |holds(inprogr(generate),3)| |hold_s(inprogr(generate),3)|))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(end(generate),1)|) |occurs(end(generate),1)|))
(assert (or (not |624|) |occurs(end(generate),2)|))
(assert (or (not |625|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),0)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(generating,1)|) (not |occurs(start(generate),1)|) |occurs(start(generate),1)|))
(assert (or (not |hold_s(inprogr(generate),1)|) (not |occurs(end(generate),1)|)))
(assert (or (not |hold_s(inprogr(generate),2)|) (not |occurs(end(generate),2)|)))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(start(generate),1)|)))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |hold_s(inprogr(refuel(tank1)),1)|)))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |hold_s(inprogr(refuel(tank2)),1)|)))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |hold_s(inprogr(refuel(tank3)),1)|)))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |hold_s(inprogr(refuel(tank4)),1)|)))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |hold_s(inprogr(refuel(tank5)),1)|)))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |hold_s(inprogr(refuel(tank6)),1)|)))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |hold_s(inprogr(refuel(tank7)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) (not |occurs(end(refuel(tank1)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) (not |occurs(end(refuel(tank2)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) (not |occurs(end(refuel(tank3)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) (not |occurs(end(refuel(tank4)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) (not |occurs(end(refuel(tank5)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank6)),2)|) (not |occurs(end(refuel(tank6)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank7)),2)|) (not |occurs(end(refuel(tank7)),2)|)))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(start(refuel(tank1)),1)|)))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(start(refuel(tank2)),1)|)))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(start(refuel(tank3)),1)|)))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(start(refuel(tank4)),1)|)))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(start(refuel(tank5)),1)|)))
(assert (or (not |occurs(start(refuel(tank6)),0)|) (not |occurs(start(refuel(tank6)),1)|)))
(assert (or (not |occurs(start(refuel(tank7)),0)|) (not |occurs(start(refuel(tank7)),1)|)))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |552|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |556|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |559|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |562|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |565|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) |568|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) |571|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |occurs(start(generate),0)|) (not |required_false(geq_flevel_0,0)|)))
(assert (or (not |hold_s(generating,1)|) |576|))
(assert (or (not |hold_s(generating,2)|) |578|))
(assert (or (not |occurs(start(generate),0)|) |581|))
(assert (or (not |occurs(start(generate),1)|) |occurs(end(generate),2)|))
(assert (or (not |occurs(end(generate),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))|))
(assert (or (not |occurs(end(generate),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))|))
(assert (or (not |occurs(end(generate),1)|) |completed(generate,2)|))
(assert (or (not |occurs(end(generate),2)|) |completed(generate,3)|))
(assert (or (not |occurs(start(generate),0)|) |required(ezcsp__eq(stime(generate),end(0)))|))
(assert (or (not |occurs(start(generate),1)|) |required(ezcsp__eq(stime(generate),end(1)))|))
(assert (or (not |holds(inprogr(generate),1)|) |ab(contrib(fuel_level,decr,generate),1)|))
(assert (or (not |holds(inprogr(generate),2)|) |ab(contrib(fuel_level,decr,generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) |ab(contrib(fuel_level,decr,generate),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| |ab(contrib(fuel_level,decr,generate),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| |ab(contrib(fuel_level,decr,generate),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| |ab(contrib(fuel_level,decr,generate),3)|))
(assert (or (not |holds(inprogr(generate),1)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(generate),2)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(generate),3)|) |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |required_false(geq_flevel_0,0)|) |required(ezcsp__lt(v_final(fuel_level,0),0))|))
(assert (or (not |required_false(geq_flevel_0,0)|) |required_false(geq_flevel_0,0)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |required(ezcsp__lt(v_final(fuel_level,1),0))|))
(assert (or (not |hold_s(generating,1)|) (not |required_false(geq_flevel_0,1)|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |required(ezcsp__lt(v_final(fuel_level,2),0))|))
(assert (or (not |hold_s(generating,2)|) (not |required_false(geq_flevel_0,2)|) |required_false(geq_flevel_0,2)|))
(assert (or (not |626|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |627|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |628|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |629|) |cspvar(adur(refuel(tank1)),0,1000)|))
(assert (or (not |630|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |631|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |632|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |633|) |cspvar(adur(refuel(tank2)),0,1000)|))
(assert (or (not |634|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |635|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |636|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |637|) |cspvar(adur(refuel(tank3)),0,1000)|))
(assert (or (not |638|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |639|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |640|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |641|) |cspvar(adur(refuel(tank4)),0,1000)|))
(assert (or (not |642|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |643|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |644|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |645|) |cspvar(adur(refuel(tank5)),0,1000)|))
(assert (or (not |646|) |cspvar(adur(refuel(tank6)),0,1000)|))
(assert (or (not |647|) |cspvar(adur(refuel(tank6)),0,1000)|))
(assert (or (not |648|) |cspvar(adur(refuel(tank6)),0,1000)|))
(assert (or (not |649|) |cspvar(adur(refuel(tank6)),0,1000)|))
(assert (or (not |650|) |cspvar(adur(refuel(tank7)),0,1000)|))
(assert (or (not |651|) |cspvar(adur(refuel(tank7)),0,1000)|))
(assert (or (not |652|) |cspvar(adur(refuel(tank7)),0,1000)|))
(assert (or (not |653|) |cspvar(adur(refuel(tank7)),0,1000)|))
(assert (or (not |654|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |655|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |656|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |657|) |cspvar(adur(generate),0,1000)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |occurs(start(refuel(tank6)),0)|) |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) (not |occurs(start(refuel(tank6)),0)|) |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |occurs(start(refuel(tank7)),0)|) |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) (not |occurs(start(refuel(tank7)),0)|) |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),0)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),0)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |occurs(start(refuel(tank6)),1)|) |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) (not |occurs(start(refuel(tank6)),1)|) |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |occurs(start(refuel(tank7)),1)|) |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) (not |occurs(start(refuel(tank7)),1)|) |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),1)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),1)|) |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) |381|))
(assert (or (not |occurs(start(generate),0)|) |381|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) |382|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |382|))
(assert (or (not |occurs(start(generate),1)|) |382|))
(assert (or (not |occurs(end(generate),1)|) |382|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |383|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |383|))
(assert (or (not |occurs(end(generate),2)|) |383|))
(assert (or (not |381|) |some_action(0)|))
(assert (or (not |382|) |some_action(1)|))
(assert (or (not |383|) |some_action(2)|))
(assert (or (not |completed(generate,2)|) |completed(generate)|))
(assert (or (not |completed(generate,3)|) |completed(generate)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank6))),10))|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank6))),10))|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank7))),10))|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank7))),10))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |completed(refuel(tank1),2)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |completed(refuel(tank2),2)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |completed(refuel(tank3),2)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |completed(refuel(tank4),2)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |completed(refuel(tank5),2)|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |completed(refuel(tank6),2)|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |completed(refuel(tank7),2)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |completed(refuel(tank1),3)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |completed(refuel(tank2),3)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |completed(refuel(tank3),3)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |completed(refuel(tank4),3)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |completed(refuel(tank5),3)|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |completed(refuel(tank6),3)|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |completed(refuel(tank7),3)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) |required(ezcsp__eq(stime(refuel(tank1)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) |required(ezcsp__eq(stime(refuel(tank2)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) |required(ezcsp__eq(stime(refuel(tank3)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) |required(ezcsp__eq(stime(refuel(tank4)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) |required(ezcsp__eq(stime(refuel(tank5)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) |required(ezcsp__eq(stime(refuel(tank6)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) |required(ezcsp__eq(stime(refuel(tank7)),end(0)))|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) |required(ezcsp__eq(stime(refuel(tank1)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) |required(ezcsp__eq(stime(refuel(tank2)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) |required(ezcsp__eq(stime(refuel(tank3)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) |required(ezcsp__eq(stime(refuel(tank4)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) |required(ezcsp__eq(stime(refuel(tank5)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) |required(ezcsp__eq(stime(refuel(tank6)),end(1)))|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) |required(ezcsp__eq(stime(refuel(tank7)),end(1)))|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |ab(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |ab(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |ab(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |ab(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |ab(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (or (not |holds(inprogr(refuel(tank6)),1)|) |ab(contrib(fuel_level,incr,refuel(tank6)),1)|))
(assert (or (not |holds(inprogr(refuel(tank7)),1)|) |ab(contrib(fuel_level,incr,refuel(tank7)),1)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |ab(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |ab(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |ab(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |ab(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |ab(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank6)),2)|) |ab(contrib(fuel_level,incr,refuel(tank6)),2)|))
(assert (or (not |holds(inprogr(refuel(tank7)),2)|) |ab(contrib(fuel_level,incr,refuel(tank7)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |ab(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |ab(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |ab(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |ab(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |ab(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (or (not |holds(inprogr(refuel(tank6)),3)|) |ab(contrib(fuel_level,incr,refuel(tank6)),3)|))
(assert (or (not |holds(inprogr(refuel(tank7)),3)|) |ab(contrib(fuel_level,incr,refuel(tank7)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank6)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))| |ab(contrib(fuel_level,incr,refuel(tank7)),1)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank6)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))| |ab(contrib(fuel_level,incr,refuel(tank7)),2)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank6)),3)|))
(assert (or |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))| |ab(contrib(fuel_level,incr,refuel(tank7)),3)|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank6)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank7)),1)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank6)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank7)),2)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank6)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |holds(inprogr(refuel(tank7)),3)|) |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |550|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |550|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(end(refuel(tank1)),2)|) |551|))
(assert (or (not |550|) |552| |551|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |554|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |554|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(end(refuel(tank2)),2)|) |555|))
(assert (or (not |554|) |556| |555|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |557|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |557|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(end(refuel(tank3)),2)|) |558|))
(assert (or (not |557|) |559| |558|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |560|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |560|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(end(refuel(tank4)),2)|) |561|))
(assert (or (not |560|) |562| |561|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |563|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |563|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(end(refuel(tank5)),2)|) |564|))
(assert (or (not |563|) |565| |564|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |566|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |566|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |occurs(end(refuel(tank6)),2)|) |567|))
(assert (or (not |566|) |568| |567|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |569|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |569|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |occurs(end(refuel(tank7)),2)|) |570|))
(assert (or (not |569|) |571| |570|))
(assert (or (not |occurs(start(generate),0)|) |572|))
(assert (or (not |required_false(geq_flevel_0,0)|) |572|))
(assert (or (not |572|) |573|))
(assert (or (not |occurs(start(generate),1)|) |574|))
(assert (or (not |required_false(geq_flevel_0,1)|) |574|))
(assert (or (not |occurs(start(generate),1)|) (not |required_false(geq_flevel_0,1)|) |575|))
(assert (or (not |574|) |576| |575|))
(assert (or (not |required_false(geq_flevel_0,2)|) |577|))
(assert (or (not |577|) |578|))
(assert (or (not |occurs(end(generate),1)|) |579|))
(assert (or (not |occurs(end(generate),2)|) |579|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(end(generate),2)|) |580|))
(assert (or (not |579|) |581| |580|))
(assert (or (not |583|) |hold_s(inprogr(refuel(tank1)),1)|))
(assert (or (not |583|) (not |holds(inprogr(refuel(tank1)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),1)|) |583| |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) |occurs(end(refuel(tank1)),1)| |583|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |584|) |hold_s(inprogr(refuel(tank2)),1)|))
(assert (or (not |584|) (not |holds(inprogr(refuel(tank2)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),1)|) |584| |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) |occurs(end(refuel(tank2)),1)| |584|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |585|) |hold_s(inprogr(refuel(tank3)),1)|))
(assert (or (not |585|) (not |holds(inprogr(refuel(tank3)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),1)|) |585| |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) |occurs(end(refuel(tank3)),1)| |585|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |586|) |hold_s(inprogr(refuel(tank4)),1)|))
(assert (or (not |586|) (not |holds(inprogr(refuel(tank4)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),1)|) |586| |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) |occurs(end(refuel(tank4)),1)| |586|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |587|) |hold_s(inprogr(refuel(tank5)),1)|))
(assert (or (not |587|) (not |holds(inprogr(refuel(tank5)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),1)|) |587| |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) |occurs(end(refuel(tank5)),1)| |587|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |588|) |hold_s(inprogr(refuel(tank6)),1)|))
(assert (or (not |588|) (not |holds(inprogr(refuel(tank6)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank6)),1)|) |588| |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank6)),2)|) |occurs(end(refuel(tank6)),1)| |588|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |589|) |hold_s(inprogr(refuel(tank7)),1)|))
(assert (or (not |589|) (not |holds(inprogr(refuel(tank7)),2)|)))
(assert (or (not |hold_s(inprogr(refuel(tank7)),1)|) |589| |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |hold_s(inprogr(refuel(tank7)),2)|) |occurs(end(refuel(tank7)),1)| |589|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |590|) |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |590|) (not |holds(inprogr(refuel(tank1)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank1)),2)|) |590| |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),3)|) |occurs(end(refuel(tank1)),2)| |590|))
(assert (or (not |591|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |591|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),0)|) (not |occurs(end(refuel(tank1)),2)|) |591|))
(assert (or (not |592|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |592|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |occurs(start(refuel(tank1)),1)|) (not |occurs(end(refuel(tank1)),2)|) |592|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) |591| |592|))
(assert (or (not |593|) |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |593|) (not |holds(inprogr(refuel(tank2)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),2)|) |593| |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank2)),3)|) |occurs(end(refuel(tank2)),2)| |593|))
(assert (or (not |594|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |594|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),0)|) (not |occurs(end(refuel(tank2)),2)|) |594|))
(assert (or (not |595|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |595|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |occurs(start(refuel(tank2)),1)|) (not |occurs(end(refuel(tank2)),2)|) |595|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) |594| |595|))
(assert (or (not |596|) |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |596|) (not |holds(inprogr(refuel(tank3)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),2)|) |596| |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank3)),3)|) |occurs(end(refuel(tank3)),2)| |596|))
(assert (or (not |597|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |597|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),0)|) (not |occurs(end(refuel(tank3)),2)|) |597|))
(assert (or (not |598|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |598|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |occurs(start(refuel(tank3)),1)|) (not |occurs(end(refuel(tank3)),2)|) |598|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) |597| |598|))
(assert (or (not |599|) |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |599|) (not |holds(inprogr(refuel(tank4)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),2)|) |599| |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank4)),3)|) |occurs(end(refuel(tank4)),2)| |599|))
(assert (or (not |600|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |600|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),0)|) (not |occurs(end(refuel(tank4)),2)|) |600|))
(assert (or (not |601|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |601|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |occurs(start(refuel(tank4)),1)|) (not |occurs(end(refuel(tank4)),2)|) |601|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) |600| |601|))
(assert (or (not |602|) |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |602|) (not |holds(inprogr(refuel(tank5)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),2)|) |602| |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank5)),3)|) |occurs(end(refuel(tank5)),2)| |602|))
(assert (or (not |603|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |603|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),0)|) (not |occurs(end(refuel(tank5)),2)|) |603|))
(assert (or (not |604|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |604|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |occurs(start(refuel(tank5)),1)|) (not |occurs(end(refuel(tank5)),2)|) |604|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) |603| |604|))
(assert (or (not |605|) |hold_s(inprogr(refuel(tank6)),2)|))
(assert (or (not |605|) (not |holds(inprogr(refuel(tank6)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank6)),2)|) |605| |holds(inprogr(refuel(tank6)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank6)),3)|) |occurs(end(refuel(tank6)),2)| |605|))
(assert (or (not |606|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |606|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |occurs(start(refuel(tank6)),0)|) (not |occurs(end(refuel(tank6)),2)|) |606|))
(assert (or (not |607|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |607|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |occurs(start(refuel(tank6)),1)|) (not |occurs(end(refuel(tank6)),2)|) |607|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) |606| |607|))
(assert (or (not |608|) |hold_s(inprogr(refuel(tank7)),2)|))
(assert (or (not |608|) (not |holds(inprogr(refuel(tank7)),3)|)))
(assert (or (not |hold_s(inprogr(refuel(tank7)),2)|) |608| |holds(inprogr(refuel(tank7)),3)|))
(assert (or (not |hold_s(inprogr(refuel(tank7)),3)|) |occurs(end(refuel(tank7)),2)| |608|))
(assert (or (not |609|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |609|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |occurs(start(refuel(tank7)),0)|) (not |occurs(end(refuel(tank7)),2)|) |609|))
(assert (or (not |610|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |610|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |occurs(start(refuel(tank7)),1)|) (not |occurs(end(refuel(tank7)),2)|) |610|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) |609| |610|))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |holds(inprogr(refuel(tank6)),1)|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |holds(inprogr(refuel(tank7)),1)|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |611|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |611|) (not |hold_s(inprogr(refuel(tank1)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank1)),1)|) |611| |hold_s(inprogr(refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),2)|) |occurs(start(refuel(tank1)),1)| |611|))
(assert (or (not |612|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |612|) (not |hold_s(inprogr(refuel(tank2)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank2)),1)|) |612| |hold_s(inprogr(refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),2)|) |occurs(start(refuel(tank2)),1)| |612|))
(assert (or (not |613|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |613|) (not |hold_s(inprogr(refuel(tank3)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank3)),1)|) |613| |hold_s(inprogr(refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),2)|) |occurs(start(refuel(tank3)),1)| |613|))
(assert (or (not |614|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |614|) (not |hold_s(inprogr(refuel(tank4)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank4)),1)|) |614| |hold_s(inprogr(refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),2)|) |occurs(start(refuel(tank4)),1)| |614|))
(assert (or (not |615|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |615|) (not |hold_s(inprogr(refuel(tank5)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank5)),1)|) |615| |hold_s(inprogr(refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),2)|) |occurs(start(refuel(tank5)),1)| |615|))
(assert (or (not |616|) |holds(inprogr(refuel(tank6)),1)|))
(assert (or (not |616|) (not |hold_s(inprogr(refuel(tank6)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank6)),1)|) |616| |hold_s(inprogr(refuel(tank6)),2)|))
(assert (or (not |holds(inprogr(refuel(tank6)),2)|) |occurs(start(refuel(tank6)),1)| |616|))
(assert (or (not |617|) |holds(inprogr(refuel(tank7)),1)|))
(assert (or (not |617|) (not |hold_s(inprogr(refuel(tank7)),2)|)))
(assert (or (not |holds(inprogr(refuel(tank7)),1)|) |617| |hold_s(inprogr(refuel(tank7)),2)|))
(assert (or (not |holds(inprogr(refuel(tank7)),2)|) |occurs(start(refuel(tank7)),1)| |617|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |holds(inprogr(refuel(tank1)),3)|) (not |hold_s(inprogr(refuel(tank1)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |holds(inprogr(refuel(tank2)),3)|) (not |hold_s(inprogr(refuel(tank2)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |holds(inprogr(refuel(tank3)),3)|) (not |hold_s(inprogr(refuel(tank3)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |holds(inprogr(refuel(tank4)),3)|) (not |hold_s(inprogr(refuel(tank4)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |holds(inprogr(refuel(tank5)),3)|) (not |hold_s(inprogr(refuel(tank5)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank6)),3)|) |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |holds(inprogr(refuel(tank6)),3)|) (not |hold_s(inprogr(refuel(tank6)),3)|)))
(assert (or (not |holds(inprogr(refuel(tank7)),3)|) |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |holds(inprogr(refuel(tank7)),3)|) (not |hold_s(inprogr(refuel(tank7)),3)|)))
(assert (or (not |hold_s(generating,1)|) (not |holds(generating,1)|)))
(assert (or (not |holds(generating,1)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(inprogr(generate),1)|) (not |holds(inprogr(generate),1)|)))
(assert (or (not |holds(inprogr(generate),1)|) |occurs(start(generate),0)|))
(assert (or (not |hold_s(inprogr(refuel(tank1)),1)|) (not |holds(inprogr(refuel(tank1)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank2)),1)|) (not |holds(inprogr(refuel(tank2)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank3)),1)|) (not |holds(inprogr(refuel(tank3)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank4)),1)|) (not |holds(inprogr(refuel(tank4)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank5)),1)|) (not |holds(inprogr(refuel(tank5)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank6)),1)|) (not |holds(inprogr(refuel(tank6)),1)|)))
(assert (or (not |hold_s(inprogr(refuel(tank7)),1)|) (not |holds(inprogr(refuel(tank7)),1)|)))
(assert (or (not |618|) |hold_s(generating,1)|))
(assert (or (not |618|) (not |holds(generating,2)|)))
(assert (or (not |hold_s(generating,1)|) |618| |holds(generating,2)|))
(assert (or (not |hold_s(generating,2)|) |618| |occurs(end(generate),1)|))
(assert (or (not |619|) |holds(generating,1)|))
(assert (or (not |619|) (not |hold_s(generating,2)|)))
(assert (or (not |holds(generating,1)|) |619| |hold_s(generating,2)|))
(assert (or (not |holds(generating,2)|) |occurs(start(generate),1)| |619|))
(assert (or (not |620|) |hold_s(inprogr(generate),1)|))
(assert (or (not |620|) (not |holds(inprogr(generate),2)|)))
(assert (or (not |hold_s(inprogr(generate),1)|) |620| |holds(inprogr(generate),2)|))
(assert (or (not |hold_s(inprogr(generate),2)|) |620| |occurs(end(generate),1)|))
(assert (or (not |621|) |holds(inprogr(generate),1)|))
(assert (or (not |621|) (not |hold_s(inprogr(generate),2)|)))
(assert (or (not |holds(inprogr(generate),1)|) |621| |hold_s(inprogr(generate),2)|))
(assert (or (not |holds(inprogr(generate),2)|) |occurs(start(generate),1)| |621|))
(assert (or (not |622|) |hold_s(generating,2)|))
(assert (or (not |622|) (not |holds(generating,3)|)))
(assert (or (not |hold_s(generating,2)|) |622| |holds(generating,3)|))
(assert (or (not |hold_s(generating,3)|) |622| |occurs(end(generate),2)|))
(assert (or (not |holds(generating,3)|) |holds(generating,2)|))
(assert (or (not |holds(generating,3)|) (not |hold_s(generating,3)|)))
(assert (or (not |623|) |hold_s(inprogr(generate),2)|))
(assert (or (not |623|) (not |holds(inprogr(generate),3)|)))
(assert (or (not |hold_s(inprogr(generate),2)|) |623| |holds(inprogr(generate),3)|))
(assert (or (not |hold_s(inprogr(generate),3)|) |623| |occurs(end(generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) |holds(inprogr(generate),2)|))
(assert (or (not |holds(inprogr(generate),3)|) (not |hold_s(inprogr(generate),3)|)))
(assert (or (not |occurs(end(generate),1)|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),1)|) |occurs(end(generate),1)|))
(assert (or (not |624|) |occurs(start(generate),0)|))
(assert (or (not |624|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),0)|) (not |occurs(end(generate),2)|) |624|))
(assert (or (not |625|) |occurs(start(generate),1)|))
(assert (or (not |625|) |occurs(end(generate),2)|))
(assert (or (not |occurs(start(generate),1)|) (not |occurs(end(generate),2)|) |625|))
(assert (or (not |occurs(end(generate),2)|) |624| |625|))
(assert (or (not |occurs(start(generate),1)|) |hold_s(generating,1)|))
(assert (or (not |occurs(start(generate),1)|) |occurs(start(generate),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))|) |occurs(end(generate),2)|))
(assert (or (not |completed(generate,2)|) |occurs(end(generate),1)|))
(assert (or (not |completed(generate,3)|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(stime(generate),end(0)))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(stime(generate),end(1)))|) |occurs(start(generate),1)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),1)|) |holds(inprogr(generate),1)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),2)|) |holds(inprogr(generate),2)|))
(assert (or (not |ab(contrib(fuel_level,decr,generate),3)|) |holds(inprogr(generate),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))|) (not |ab(contrib(fuel_level,decr,generate),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))|) (not |ab(contrib(fuel_level,decr,generate),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))|) (not |ab(contrib(fuel_level,decr,generate),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(generate),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(generate),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(generate),3)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,0),0))|) |required_false(geq_flevel_0,0)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,1),0))|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |hold_s(generating,1)|))
(assert (or (not |required_false(geq_flevel_0,1)|) |required_false(geq_flevel_0,1)|))
(assert (or (not |required(ezcsp__lt(v_final(fuel_level,2),0))|) |required_false(geq_flevel_0,2)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |hold_s(generating,2)|))
(assert (or (not |required_false(geq_flevel_0,2)|) |required_false(geq_flevel_0,2)|))
(assert (or (not |626|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |626|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),0)|) |626|))
(assert (or (not |627|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |627|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),1)|) (not |occurs(start(refuel(tank1)),1)|) |627|))
(assert (or (not |628|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |628|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),0)|) |628|))
(assert (or (not |629|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |629|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |occurs(end(refuel(tank1)),2)|) (not |occurs(start(refuel(tank1)),1)|) |629|))
(assert (or (not |cspvar(adur(refuel(tank1)),0,1000)|) |626| |627| |628| |629|))
(assert (or (not |630|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |630|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),0)|) |630|))
(assert (or (not |631|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |631|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),1)|) (not |occurs(start(refuel(tank2)),1)|) |631|))
(assert (or (not |632|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |632|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),0)|) |632|))
(assert (or (not |633|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |633|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |occurs(end(refuel(tank2)),2)|) (not |occurs(start(refuel(tank2)),1)|) |633|))
(assert (or (not |cspvar(adur(refuel(tank2)),0,1000)|) |630| |631| |632| |633|))
(assert (or (not |634|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |634|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),0)|) |634|))
(assert (or (not |635|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |635|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),1)|) (not |occurs(start(refuel(tank3)),1)|) |635|))
(assert (or (not |636|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |636|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),0)|) |636|))
(assert (or (not |637|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |637|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |occurs(end(refuel(tank3)),2)|) (not |occurs(start(refuel(tank3)),1)|) |637|))
(assert (or (not |cspvar(adur(refuel(tank3)),0,1000)|) |634| |635| |636| |637|))
(assert (or (not |638|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |638|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),0)|) |638|))
(assert (or (not |639|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |639|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),1)|) (not |occurs(start(refuel(tank4)),1)|) |639|))
(assert (or (not |640|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |640|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),0)|) |640|))
(assert (or (not |641|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |641|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |occurs(end(refuel(tank4)),2)|) (not |occurs(start(refuel(tank4)),1)|) |641|))
(assert (or (not |cspvar(adur(refuel(tank4)),0,1000)|) |638| |639| |640| |641|))
(assert (or (not |642|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |642|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),0)|) |642|))
(assert (or (not |643|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |643|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),1)|) (not |occurs(start(refuel(tank5)),1)|) |643|))
(assert (or (not |644|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |644|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),0)|) |644|))
(assert (or (not |645|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |645|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |occurs(end(refuel(tank5)),2)|) (not |occurs(start(refuel(tank5)),1)|) |645|))
(assert (or (not |cspvar(adur(refuel(tank5)),0,1000)|) |642| |643| |644| |645|))
(assert (or (not |646|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |646|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |occurs(start(refuel(tank6)),0)|) |646|))
(assert (or (not |647|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |647|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |occurs(end(refuel(tank6)),1)|) (not |occurs(start(refuel(tank6)),1)|) |647|))
(assert (or (not |648|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |648|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) (not |occurs(start(refuel(tank6)),0)|) |648|))
(assert (or (not |649|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |649|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |occurs(end(refuel(tank6)),2)|) (not |occurs(start(refuel(tank6)),1)|) |649|))
(assert (or (not |cspvar(adur(refuel(tank6)),0,1000)|) |646| |647| |648| |649|))
(assert (or (not |650|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |650|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |occurs(start(refuel(tank7)),0)|) |650|))
(assert (or (not |651|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |651|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |occurs(end(refuel(tank7)),1)|) (not |occurs(start(refuel(tank7)),1)|) |651|))
(assert (or (not |652|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |652|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) (not |occurs(start(refuel(tank7)),0)|) |652|))
(assert (or (not |653|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |653|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |occurs(end(refuel(tank7)),2)|) (not |occurs(start(refuel(tank7)),1)|) |653|))
(assert (or (not |cspvar(adur(refuel(tank7)),0,1000)|) |650| |651| |652| |653|))
(assert (or (not |654|) |occurs(end(generate),1)|))
(assert (or (not |654|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),0)|) |654|))
(assert (or (not |655|) |occurs(end(generate),1)|))
(assert (or (not |655|) |occurs(start(generate),1)|))
(assert (or (not |occurs(end(generate),1)|) (not |occurs(start(generate),1)|) |655|))
(assert (or (not |656|) |occurs(end(generate),2)|))
(assert (or (not |656|) |occurs(start(generate),0)|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),0)|) |656|))
(assert (or (not |657|) |occurs(end(generate),2)|))
(assert (or (not |657|) |occurs(start(generate),1)|))
(assert (or (not |occurs(end(generate),2)|) (not |occurs(start(generate),1)|) |657|))
(assert (or (not |cspvar(adur(generate),0,1000)|) |654| |655| |656| |657|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(0))))|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(0))))|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(0))))|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(0))))|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))|) |occurs(start(generate),0)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(1))))|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(1))))|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(1))))|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(1))))|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|) |occurs(end(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))|) |occurs(start(generate),1)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|) |occurs(end(generate),2)|))
(assert (or (not |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))|) |occurs(start(generate),1)|))
(assert (or (not |381|) |occurs(start(refuel(tank1)),0)| |occurs(start(refuel(tank2)),0)| |occurs(start(refuel(tank3)),0)| |occurs(start(refuel(tank4)),0)| |occurs(start(refuel(tank5)),0)| |occurs(start(refuel(tank6)),0)| |occurs(start(refuel(tank7)),0)| |occurs(start(generate),0)|))
(assert (or (not |382|) |occurs(start(refuel(tank1)),1)| |occurs(start(refuel(tank2)),1)| |occurs(start(refuel(tank3)),1)| |occurs(start(refuel(tank4)),1)| |occurs(start(refuel(tank5)),1)| |occurs(start(refuel(tank6)),1)| |occurs(start(refuel(tank7)),1)| |occurs(end(refuel(tank1)),1)| |occurs(end(refuel(tank2)),1)| |occurs(end(refuel(tank3)),1)| |occurs(end(refuel(tank4)),1)| |occurs(end(refuel(tank5)),1)| |occurs(end(refuel(tank6)),1)| |occurs(end(refuel(tank7)),1)| |occurs(start(generate),1)| |occurs(end(generate),1)|))
(assert (or (not |383|) |occurs(end(refuel(tank1)),2)| |occurs(end(refuel(tank2)),2)| |occurs(end(refuel(tank3)),2)| |occurs(end(refuel(tank4)),2)| |occurs(end(refuel(tank5)),2)| |occurs(end(refuel(tank6)),2)| |occurs(end(refuel(tank7)),2)| |occurs(end(generate),2)|))
(assert (or (not |some_action(0)|) |381|))
(assert (or (not |some_action(1)|) |382|))
(assert (or (not |some_action(2)|) |383|))
(assert (or (not |completed(generate)|) |completed(generate,2)| |completed(generate,3)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank6))),10))|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank6))),10))|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank7))),10))|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank7))),10))|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |completed(refuel(tank1),2)|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |completed(refuel(tank2),2)|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |completed(refuel(tank3),2)|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |completed(refuel(tank4),2)|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |completed(refuel(tank5),2)|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |completed(refuel(tank6),2)|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |completed(refuel(tank7),2)|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |completed(refuel(tank1),3)|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |completed(refuel(tank2),3)|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |completed(refuel(tank3),3)|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |completed(refuel(tank4),3)|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |completed(refuel(tank5),3)|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |completed(refuel(tank6),3)|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |completed(refuel(tank7),3)|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank1)),end(0)))|) |occurs(start(refuel(tank1)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank2)),end(0)))|) |occurs(start(refuel(tank2)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank3)),end(0)))|) |occurs(start(refuel(tank3)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank4)),end(0)))|) |occurs(start(refuel(tank4)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank5)),end(0)))|) |occurs(start(refuel(tank5)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank6)),end(0)))|) |occurs(start(refuel(tank6)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank7)),end(0)))|) |occurs(start(refuel(tank7)),0)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank1)),end(1)))|) |occurs(start(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank2)),end(1)))|) |occurs(start(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank3)),end(1)))|) |occurs(start(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank4)),end(1)))|) |occurs(start(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank5)),end(1)))|) |occurs(start(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank6)),end(1)))|) |occurs(start(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(stime(refuel(tank7)),end(1)))|) |occurs(start(refuel(tank7)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),1)|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),1)|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),1)|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),1)|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),1)|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank6)),1)|) |holds(inprogr(refuel(tank6)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank7)),1)|) |holds(inprogr(refuel(tank7)),1)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),2)|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),2)|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),2)|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),2)|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),2)|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank6)),2)|) |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank7)),2)|) |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank1)),3)|) |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank2)),3)|) |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank3)),3)|) |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank4)),3)|) |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank5)),3)|) |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank6)),3)|) |holds(inprogr(refuel(tank6)),3)|))
(assert (or (not |ab(contrib(fuel_level,incr,refuel(tank7)),3)|) |holds(inprogr(refuel(tank7)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank6)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank7)),1)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank6)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank7)),2)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank1)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank2)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank3)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank4)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank5)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank6)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))|) (not |ab(contrib(fuel_level,incr,refuel(tank7)),3)|)))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank1)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank2)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank3)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank4)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank5)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank6)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))|) |holds(inprogr(refuel(tank7)),1)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank1)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank2)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank3)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank4)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank5)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank6)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))|) |holds(inprogr(refuel(tank7)),2)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank1)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank2)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank3)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank4)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank5)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank6)),3)|))
(assert (or (not |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))|) |holds(inprogr(refuel(tank7)),3)|))
(assert (or (not |550|) |occurs(end(refuel(tank1)),1)| |occurs(end(refuel(tank1)),2)|))
(assert (or (not |551|) |occurs(end(refuel(tank1)),1)|))
(assert (or (not |551|) |occurs(end(refuel(tank1)),2)|))
(assert (or (not |552|) |550|))
(assert (or (not |552|) (not |551|)))
(assert (or (not |554|) |occurs(end(refuel(tank2)),1)| |occurs(end(refuel(tank2)),2)|))
(assert (or (not |555|) |occurs(end(refuel(tank2)),1)|))
(assert (or (not |555|) |occurs(end(refuel(tank2)),2)|))
(assert (or (not |556|) |554|))
(assert (or (not |556|) (not |555|)))
(assert (or (not |557|) |occurs(end(refuel(tank3)),1)| |occurs(end(refuel(tank3)),2)|))
(assert (or (not |558|) |occurs(end(refuel(tank3)),1)|))
(assert (or (not |558|) |occurs(end(refuel(tank3)),2)|))
(assert (or (not |559|) |557|))
(assert (or (not |559|) (not |558|)))
(assert (or (not |560|) |occurs(end(refuel(tank4)),1)| |occurs(end(refuel(tank4)),2)|))
(assert (or (not |561|) |occurs(end(refuel(tank4)),1)|))
(assert (or (not |561|) |occurs(end(refuel(tank4)),2)|))
(assert (or (not |562|) |560|))
(assert (or (not |562|) (not |561|)))
(assert (or (not |563|) |occurs(end(refuel(tank5)),1)| |occurs(end(refuel(tank5)),2)|))
(assert (or (not |564|) |occurs(end(refuel(tank5)),1)|))
(assert (or (not |564|) |occurs(end(refuel(tank5)),2)|))
(assert (or (not |565|) |563|))
(assert (or (not |565|) (not |564|)))
(assert (or (not |566|) |occurs(end(refuel(tank6)),1)| |occurs(end(refuel(tank6)),2)|))
(assert (or (not |567|) |occurs(end(refuel(tank6)),1)|))
(assert (or (not |567|) |occurs(end(refuel(tank6)),2)|))
(assert (or (not |568|) |566|))
(assert (or (not |568|) (not |567|)))
(assert (or (not |569|) |occurs(end(refuel(tank7)),1)| |occurs(end(refuel(tank7)),2)|))
(assert (or (not |570|) |occurs(end(refuel(tank7)),1)|))
(assert (or (not |570|) |occurs(end(refuel(tank7)),2)|))
(assert (or (not |571|) |569|))
(assert (or (not |571|) (not |570|)))
(assert (or (not |572|) |occurs(start(generate),0)| |required_false(geq_flevel_0,0)|))
(assert (or (not |573|) |572|))
(assert (or (not |574|) |occurs(start(generate),1)| |required_false(geq_flevel_0,1)|))
(assert (or (not |575|) |occurs(start(generate),1)|))
(assert (or (not |575|) |required_false(geq_flevel_0,1)|))
(assert (or (not |576|) |574|))
(assert (or (not |576|) (not |575|)))
(assert (or (not |577|) |required_false(geq_flevel_0,2)|))
(assert (or (not |578|) |577|))
(assert (or (not |579|) |occurs(end(generate),1)| |occurs(end(generate),2)|))
(assert (or (not |580|) |occurs(end(generate),1)|))
(assert (or (not |580|) |occurs(end(generate),2)|))
(assert (or (not |581|) |579|))
(assert (or (not |581|) (not |580|)))
(assert |duration(generate,1000)|)
(assert |tankcap(1000)|)
(assert |tanklv(880)|)
(assert |refuel_tank(tank1)|)
(assert |refuel_tank(tank2)|)
(assert |refuel_tank(tank3)|)
(assert |refuel_tank(tank4)|)
(assert |refuel_tank(tank5)|)
(assert |refuel_tank(tank6)|)
(assert |refuel_tank(tank7)|)
(assert |cspdomain(r)|)
(assert |fluent(inprogr(generate))|)
(assert |fluent(generating)|)
(assert |hold_s(generating,0)|)
(assert |cspvar(stime(generate),0,1000)|)
(assert |required(ezcsp__geq(stime(generate),0))|)
(assert |action(start(generate))|)
(assert |action(end(generate))|)
(assert |restricted_ineq(lp)|)
(assert |restricted_ineq(nlp)|)
(assert |required(ezcsp__eq(start(0),0))|)
(assert |hold_s(inprogr(generate),0)|)
(assert |step(0)|)
(assert |step(1)|)
(assert |step(2)|)
(assert |step(3)|)
(assert |maxintval(1000)|)
(assert |cap(tank1,20)|)
(assert |cap(tank2,20)|)
(assert |cap(tank3,20)|)
(assert |cap(tank4,20)|)
(assert |cap(tank5,20)|)
(assert |cap(tank6,20)|)
(assert |cap(tank7,20)|)
(assert |duration(refuel(tank1),10)|)
(assert |duration(refuel(tank2),10)|)
(assert |duration(refuel(tank3),10)|)
(assert |duration(refuel(tank4),10)|)
(assert |duration(refuel(tank5),10)|)
(assert |duration(refuel(tank6),10)|)
(assert |duration(refuel(tank7),10)|)
(assert |cspvar(start(0),0,1000)|)
(assert |cspvar(start(1),0,1000)|)
(assert |cspvar(start(2),0,1000)|)
(assert |cspvar(start(3),0,1000)|)
(assert |required(ezcsp__geq(start(0),0))|)
(assert |required(ezcsp__geq(start(1),0))|)
(assert |required(ezcsp__geq(start(2),0))|)
(assert |required(ezcsp__geq(start(3),0))|)
(assert |cspvar(end(0),0,1000)|)
(assert |cspvar(end(1),0,1000)|)
(assert |cspvar(end(2),0,1000)|)
(assert |cspvar(end(3),0,1000)|)
(assert |required(ezcsp__geq(end(0),0))|)
(assert |required(ezcsp__geq(end(1),0))|)
(assert |required(ezcsp__geq(end(2),0))|)
(assert |required(ezcsp__geq(end(3),0))|)
(assert |required(ezcsp__eq(start(1),end(0)))|)
(assert |required(ezcsp__eq(start(2),end(1)))|)
(assert |required(ezcsp__eq(start(3),end(2)))|)
(assert |required(ezcsp__geq(end(0),start(0)))|)
(assert |required(ezcsp__geq(end(1),start(1)))|)
(assert |required(ezcsp__geq(end(2),start(2)))|)
(assert |required(ezcsp__geq(end(3),start(3)))|)
(assert |hold_s(inprogr(refuel(tank1)),0)|)
(assert |hold_s(inprogr(refuel(tank2)),0)|)
(assert |hold_s(inprogr(refuel(tank3)),0)|)
(assert |hold_s(inprogr(refuel(tank4)),0)|)
(assert |hold_s(inprogr(refuel(tank5)),0)|)
(assert |hold_s(inprogr(refuel(tank6)),0)|)
(assert |hold_s(inprogr(refuel(tank7)),0)|)
(assert |fluent(inprogr(refuel(tank1)))|)
(assert |fluent(inprogr(refuel(tank2)))|)
(assert |fluent(inprogr(refuel(tank3)))|)
(assert |fluent(inprogr(refuel(tank4)))|)
(assert |fluent(inprogr(refuel(tank5)))|)
(assert |fluent(inprogr(refuel(tank6)))|)
(assert |fluent(inprogr(refuel(tank7)))|)
(assert |cspvar(v_initial(fuel_level,0),0,1000)|)
(assert |cspvar(v_initial(fuel_level,1),0,1000)|)
(assert |cspvar(v_initial(fuel_level,2),0,1000)|)
(assert |cspvar(v_initial(fuel_level,3),0,1000)|)
(assert |required(ezcsp__geq(v_initial(fuel_level,0),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,1),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,2),0))|)
(assert |required(ezcsp__geq(v_initial(fuel_level,3),0))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,0),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,1),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,2),1000))|)
(assert |required(ezcsp__leq(v_initial(fuel_level,3),1000))|)
(assert |cspvar(v_final(fuel_level,0),0,1000)|)
(assert |cspvar(v_final(fuel_level,1),0,1000)|)
(assert |cspvar(v_final(fuel_level,2),0,1000)|)
(assert |cspvar(v_final(fuel_level,3),0,1000)|)
(assert |required(ezcsp__geq(v_final(fuel_level,0),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,1),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,2),0))|)
(assert |required(ezcsp__geq(v_final(fuel_level,3),0))|)
(assert |required(ezcsp__leq(v_final(fuel_level,0),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,1),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,2),1000))|)
(assert |required(ezcsp__leq(v_final(fuel_level,3),1000))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))|)
(assert |cspvar(v(contrib(fuel_level,incr),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr),3),0,1000)|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank1)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank2)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank3)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank4)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank5)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank6)),3),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,incr,refuel(tank7)),3),0,1000)|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank1)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank2)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank3)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank4)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank5)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank6)),0))|)
(assert |incr(0,v(contrib(fuel_level,incr,refuel(tank7)),0))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank1)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank2)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank3)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank4)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank5)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank6)),1))|)
(assert |incr(1,v(contrib(fuel_level,incr,refuel(tank7)),1))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank1)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank2)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank3)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank4)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank5)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank6)),2))|)
(assert |incr(2,v(contrib(fuel_level,incr,refuel(tank7)),2))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank1)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank2)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank3)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank4)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank5)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank6)),3))|)
(assert |incr(3,v(contrib(fuel_level,incr,refuel(tank7)),3))|)
(assert |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))|)
(assert |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))|)
(assert |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))|)
(assert |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))|)
(assert |cspvar(v(contrib(fuel_level,decr),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr),3),0,1000)|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),0),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),1),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),2),0,1000)|)
(assert |cspvar(v(contrib(fuel_level,decr,generate),3),0,1000)|)
(assert |decr(0,v(contrib(fuel_level,decr,generate),0))|)
(assert |decr(1,v(contrib(fuel_level,decr,generate),1))|)
(assert |decr(2,v(contrib(fuel_level,decr,generate),2))|)
(assert |decr(3,v(contrib(fuel_level,decr,generate),3))|)
(assert |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))|)
(assert |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))|)
(assert |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))|)
(assert |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))|)
(assert |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))|)
(assert |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))|)
(assert (not |288|))
(assert |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))|)
(assert |action(end(refuel(tank1)))|)
(assert |action(end(refuel(tank2)))|)
(assert |action(end(refuel(tank3)))|)
(assert |action(end(refuel(tank4)))|)
(assert |action(end(refuel(tank5)))|)
(assert |action(end(refuel(tank6)))|)
(assert |action(end(refuel(tank7)))|)
(assert |action(start(refuel(tank1)))|)
(assert |action(start(refuel(tank2)))|)
(assert |action(start(refuel(tank3)))|)
(assert |action(start(refuel(tank4)))|)
(assert |action(start(refuel(tank5)))|)
(assert |action(start(refuel(tank6)))|)
(assert |action(start(refuel(tank7)))|)
(assert |maction(generate)|)
(assert |maction(refuel(tank1))|)
(assert |maction(refuel(tank2))|)
(assert |maction(refuel(tank3))|)
(assert |maction(refuel(tank4))|)
(assert |maction(refuel(tank5))|)
(assert |maction(refuel(tank6))|)
(assert |maction(refuel(tank7))|)
(assert |cspvar(dur(0),0,1000)|)
(assert |cspvar(dur(1),0,1000)|)
(assert |cspvar(dur(2),0,1000)|)
(assert |cspvar(dur(3),0,1000)|)
(assert |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))|)
(assert |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))|)
(assert |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))|)
(assert |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))|)
(assert |381|)
(assert |382|)
(assert |383|)
(assert |some_action(0)|)
(assert |some_action(1)|)
(assert |some_action(2)|)
(assert |cspvar(stime(refuel(tank1)),0,1000)|)
(assert |cspvar(stime(refuel(tank2)),0,1000)|)
(assert |cspvar(stime(refuel(tank3)),0,1000)|)
(assert |cspvar(stime(refuel(tank4)),0,1000)|)
(assert |cspvar(stime(refuel(tank5)),0,1000)|)
(assert |cspvar(stime(refuel(tank6)),0,1000)|)
(assert |cspvar(stime(refuel(tank7)),0,1000)|)
(assert |required(ezcsp__geq(stime(refuel(tank1)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank2)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank3)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank4)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank5)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank6)),0))|)
(assert |required(ezcsp__geq(stime(refuel(tank7)),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))|)
(assert |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))|)
(assert |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))|)
(assert |required(ezcsp__eq(v_initial(fuel_level,0),880))|)
(assert |543|)
(assert |544|)
(assert |545|)
(assert |546|)
(assert |547|)
(assert |548|)
(assert |549|)
(assert |553|)
(assert |572|)
(assert |573|)
(assert |582|)
(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank6)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank6)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank6)),3)|))

(declare-fun |adur(refuel(tank4))| () Real)
(assert (<= 0 |adur(refuel(tank4))|))
(assert (>= 1000 |adur(refuel(tank4))|))

(declare-fun |start(2)| () Real)
(assert (<= 0 |start(2)|))
(assert (>= 1000 |start(2)|))

(declare-fun |start(1)| () Real)
(assert (<= 0 |start(1)|))
(assert (>= 1000 |start(1)|))

(declare-fun |v_initial(fuel_level,2)| () Real)
(assert (<= 0 |v_initial(fuel_level,2)|))
(assert (>= 1000 |v_initial(fuel_level,2)|))

(declare-fun |v(contrib(fuel_level,incr),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),2)|))

(declare-fun |adur(generate)| () Real)
(assert (<= 0 |adur(generate)|))
(assert (>= 1000 |adur(generate)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),2)|))

(declare-fun |v(contrib(fuel_level,decr),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),0)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),0)|))

(declare-fun |stime(refuel(tank4))| () Real)
(assert (<= 0 |stime(refuel(tank4))|))
(assert (>= 1000 |stime(refuel(tank4))|))

(declare-fun |v_initial(fuel_level,1)| () Real)
(assert (<= 0 |v_initial(fuel_level,1)|))
(assert (>= 1000 |v_initial(fuel_level,1)|))

(declare-fun |stime(refuel(tank2))| () Real)
(assert (<= 0 |stime(refuel(tank2))|))
(assert (>= 1000 |stime(refuel(tank2))|))

(declare-fun |v_final(fuel_level,2)| () Real)
(assert (<= 0 |v_final(fuel_level,2)|))
(assert (>= 1000 |v_final(fuel_level,2)|))

(declare-fun |adur(refuel(tank3))| () Real)
(assert (<= 0 |adur(refuel(tank3))|))
(assert (>= 1000 |adur(refuel(tank3))|))

(declare-fun |adur(refuel(tank2))| () Real)
(assert (<= 0 |adur(refuel(tank2))|))
(assert (>= 1000 |adur(refuel(tank2))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank7)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank7)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank7)),2)|))

(declare-fun |stime(refuel(tank7))| () Real)
(assert (<= 0 |stime(refuel(tank7))|))
(assert (>= 1000 |stime(refuel(tank7))|))

(declare-fun |v(contrib(fuel_level,decr,generate),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),2)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank7)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank7)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank7)),0)|))

(declare-fun |adur(refuel(tank5))| () Real)
(assert (<= 0 |adur(refuel(tank5))|))
(assert (>= 1000 |adur(refuel(tank5))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank6)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank6)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank6)),2)|))

(declare-fun |stime(refuel(tank1))| () Real)
(assert (<= 0 |stime(refuel(tank1))|))
(assert (>= 1000 |stime(refuel(tank1))|))

(declare-fun |v(contrib(fuel_level,incr),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),1)|))

(declare-fun |v(contrib(fuel_level,decr,generate),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),3)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),3)|))

(declare-fun |stime(generate)| () Real)
(assert (<= 0 |stime(generate)|))
(assert (>= 1000 |stime(generate)|))

(declare-fun |end(3)| () Real)
(assert (<= 0 |end(3)|))
(assert (>= 1000 |end(3)|))

(declare-fun |start(3)| () Real)
(assert (<= 0 |start(3)|))
(assert (>= 1000 |start(3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),0)|))

(declare-fun |v(contrib(fuel_level,decr),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),2)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank6)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank6)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank6)),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank7)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank7)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank7)),1)|))

(declare-fun |v(contrib(fuel_level,decr),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),1)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),1)|))

(declare-fun |adur(refuel(tank1))| () Real)
(assert (<= 0 |adur(refuel(tank1))|))
(assert (>= 1000 |adur(refuel(tank1))|))

(declare-fun |v(contrib(fuel_level,incr),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),3)|))

(declare-fun |stime(refuel(tank6))| () Real)
(assert (<= 0 |stime(refuel(tank6))|))
(assert (>= 1000 |stime(refuel(tank6))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank3)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank3)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank3)),1)|))

(declare-fun |dur(3)| () Real)
(assert (<= 0 |dur(3)|))
(assert (>= 1000 |dur(3)|))

(declare-fun |v_final(fuel_level,1)| () Real)
(assert (<= 0 |v_final(fuel_level,1)|))
(assert (>= 1000 |v_final(fuel_level,1)|))

(declare-fun |v_initial(fuel_level,0)| () Real)
(assert (<= 0 |v_initial(fuel_level,0)|))
(assert (>= 1000 |v_initial(fuel_level,0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),2)|))

(declare-fun |dur(1)| () Real)
(assert (<= 0 |dur(1)|))
(assert (>= 1000 |dur(1)|))

(declare-fun |end(2)| () Real)
(assert (<= 0 |end(2)|))
(assert (>= 1000 |end(2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank1)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank1)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank1)),1)|))

(declare-fun |start(0)| () Real)
(assert (<= 0 |start(0)|))
(assert (>= 1000 |start(0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),0)|))

(declare-fun |adur(refuel(tank6))| () Real)
(assert (<= 0 |adur(refuel(tank6))|))
(assert (>= 1000 |adur(refuel(tank6))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),1)|))

(declare-fun |adur(refuel(tank7))| () Real)
(assert (<= 0 |adur(refuel(tank7))|))
(assert (>= 1000 |adur(refuel(tank7))|))

(declare-fun |dur(0)| () Real)
(assert (<= 0 |dur(0)|))
(assert (>= 1000 |dur(0)|))

(declare-fun |stime(refuel(tank3))| () Real)
(assert (<= 0 |stime(refuel(tank3))|))
(assert (>= 1000 |stime(refuel(tank3))|))

(declare-fun |v(contrib(fuel_level,decr,generate),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),1)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),1)|))

(declare-fun |v_final(fuel_level,3)| () Real)
(assert (<= 0 |v_final(fuel_level,3)|))
(assert (>= 1000 |v_final(fuel_level,3)|))

(declare-fun |v(contrib(fuel_level,incr),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr),1)|))

(declare-fun |end(0)| () Real)
(assert (<= 0 |end(0)|))
(assert (>= 1000 |end(0)|))

(declare-fun |v_final(fuel_level,0)| () Real)
(assert (<= 0 |v_final(fuel_level,0)|))
(assert (>= 1000 |v_final(fuel_level,0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),2)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),2)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),2)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank6)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank6)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank6)),1)|))

(declare-fun |v_initial(fuel_level,3)| () Real)
(assert (<= 0 |v_initial(fuel_level,3)|))
(assert (>= 1000 |v_initial(fuel_level,3)|))

(declare-fun |dur(2)| () Real)
(assert (<= 0 |dur(2)|))
(assert (>= 1000 |dur(2)|))

(declare-fun |end(1)| () Real)
(assert (<= 0 |end(1)|))
(assert (>= 1000 |end(1)|))

(declare-fun |stime(refuel(tank5))| () Real)
(assert (<= 0 |stime(refuel(tank5))|))
(assert (>= 1000 |stime(refuel(tank5))|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank4)),1)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank4)),1)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank4)),1)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank2)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank2)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank2)),0)|))

(declare-fun |v(contrib(fuel_level,decr,generate),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr,generate),0)|))
(assert (>= 1000 |v(contrib(fuel_level,decr,generate),0)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank5)),0)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank5)),0)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank5)),0)|))

(declare-fun |v(contrib(fuel_level,decr),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,decr),3)|))
(assert (>= 1000 |v(contrib(fuel_level,decr),3)|))

(declare-fun |v(contrib(fuel_level,incr,refuel(tank7)),3)| () Real)
(assert (<= 0 |v(contrib(fuel_level,incr,refuel(tank7)),3)|))
(assert (>= 1000 |v(contrib(fuel_level,incr,refuel(tank7)),3)|))

(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank3))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank3))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank4)),end(1)))| (= |stime(refuel(tank4))|  |end(1)| )))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,2),1000))| (<= |v_final(fuel_level,2)|  1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank7))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(1))))| (= |adur(generate)| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,2),0))| (>= |v_final(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__geq(end(2),0))| (>= |end(2)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(0),2),ezcsp__eq,v(contrib(fuel_level,decr),0)))| (= |v(contrib(fuel_level,decr,generate),0)|  |v(contrib(fuel_level,decr),0)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank3))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,1),0))| (>= |v_initial(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,0),1000))| (<= |v_final(fuel_level,0)|  1000)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank6)),0))| (>= |stime(refuel(tank6))|  0)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,2),1000))| (<= |v_initial(fuel_level,2)|  1000)))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,2),0))| (>= |v_initial(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank2))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank5))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),0)|  0)))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,0),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,0),v(contrib(fuel_level,incr),0)),v(contrib(fuel_level,decr),0))))| (= |v_final(fuel_level,0)| (-(+ |v_initial(fuel_level,0)|  |v(contrib(fuel_level,incr),0)| ) |v(contrib(fuel_level,decr),0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank2)),end(0)))| (= |stime(refuel(tank2))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank4))),10))| (=(- |end(1)|  |stime(refuel(tank4))| ) 10)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),ezcsp__tm(1,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,decr,generate),1)| (* 1(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),1)|  0)))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(2),end(0))))| (= |adur(generate)| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__sum(list(decr(1),2),ezcsp__eq,v(contrib(fuel_level,decr),1)))| (= |v(contrib(fuel_level,decr,generate),1)|  |v(contrib(fuel_level,decr),1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank2))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),0),0))| (>= |v(contrib(fuel_level,decr),0)|  0)))
(assert (=> |required(ezcsp__sum(list(incr(2),2),ezcsp__eq,v(contrib(fuel_level,incr),2)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank6)),2)|  |v(contrib(fuel_level,incr,refuel(tank4)),2)|  |v(contrib(fuel_level,incr,refuel(tank5)),2)|  |v(contrib(fuel_level,incr,refuel(tank7)),2)|  |v(contrib(fuel_level,incr,refuel(tank2)),2)|  |v(contrib(fuel_level,incr,refuel(tank3)),2)|  |v(contrib(fuel_level,incr,refuel(tank1)),2)| ) |v(contrib(fuel_level,incr),2)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank6)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank1))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,3),0))| (>= |v_initial(fuel_level,3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),1)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank1))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,3),1000))| (<= |v_final(fuel_level,3)|  1000)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank7)),1)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank6))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank3)),end(1)))| (= |stime(refuel(tank3))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank6)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),0)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank5))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank1)),end(1)))| (= |stime(refuel(tank1))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,3),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,3),v(contrib(fuel_level,incr),3)),v(contrib(fuel_level,decr),3))))| (= |v_final(fuel_level,3)| (-(+ |v_initial(fuel_level,3)|  |v(contrib(fuel_level,incr),3)| ) |v(contrib(fuel_level,decr),3)| ))))
(assert (=> |required(ezcsp__sum(list(incr(3),2),ezcsp__eq,v(contrib(fuel_level,incr),3)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank1)),3)|  |v(contrib(fuel_level,incr,refuel(tank7)),3)|  |v(contrib(fuel_level,incr,refuel(tank5)),3)|  |v(contrib(fuel_level,incr,refuel(tank3)),3)|  |v(contrib(fuel_level,incr,refuel(tank2)),3)|  |v(contrib(fuel_level,incr,refuel(tank4)),3)|  |v(contrib(fuel_level,incr,refuel(tank6)),3)| ) |v(contrib(fuel_level,incr),3)| )))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank5))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank4)),end(0)))| (= |stime(refuel(tank4))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(generate)),1000))| (=(- |end(2)|  |stime(generate)| ) 1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),ezcsp__tm(1,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,decr,generate),3)| (* 1(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),0)|  0)))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,1),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,1),v(contrib(fuel_level,incr),1)),v(contrib(fuel_level,decr),1))))| (= |v_final(fuel_level,1)| (-(+ |v_initial(fuel_level,1)|  |v(contrib(fuel_level,incr),1)| ) |v(contrib(fuel_level,decr),1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank6)),2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank7)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank7)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),ezcsp__tm(1,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,decr,generate),2)| (* 1(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),0),0))| (= |v(contrib(fuel_level,decr,generate),0)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank2)),end(1)))| (= |stime(refuel(tank2))|  |end(1)| )))
(assert (=> |required(ezcsp__leq(v_final(fuel_level,1),1000))| (<= |v_final(fuel_level,1)|  1000)))
(assert (=> |required(ezcsp__geq(end(2),start(2)))| (>= |end(2)|  |start(2)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank7)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank4))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,2),0))| (< |v_final(fuel_level,2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),2)|  0)))
(assert (=> |required(ezcsp__eq(start(1),end(0)))| (= |start(1)|  |end(0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),1)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank6))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),3),0))| (>= |v(contrib(fuel_level,decr),3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank6))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,1),1000))| (<= |v_initial(fuel_level,1)|  1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank7))),10))| (=(- |end(1)|  |stime(refuel(tank7))| ) 10)))
(assert (=> |required(ezcsp__sum(list(incr(0),2),ezcsp__eq,v(contrib(fuel_level,incr),0)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank6)),0)|  |v(contrib(fuel_level,incr,refuel(tank5)),0)|  |v(contrib(fuel_level,incr,refuel(tank3)),0)|  |v(contrib(fuel_level,incr,refuel(tank2)),0)|  |v(contrib(fuel_level,incr,refuel(tank7)),0)|  |v(contrib(fuel_level,incr,refuel(tank1)),0)|  |v(contrib(fuel_level,incr,refuel(tank4)),0)| ) |v(contrib(fuel_level,incr),0)| )))
(assert (=> |required(ezcsp__eq(stime(refuel(tank3)),end(0)))| (= |stime(refuel(tank3))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),2),0))| (= |v(contrib(fuel_level,decr,generate),2)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),1),0))| (>= |v(contrib(fuel_level,decr),1)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,1),v_final(fuel_level,0)))| (= |v_initial(fuel_level,1)|  |v_final(fuel_level,0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank7)),0)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank7)),0))| (>= |stime(refuel(tank7))|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank5))),10))| (=(- |end(1)|  |stime(refuel(tank5))| ) 10)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank6))),10))| (=(- |end(1)|  |stime(refuel(tank6))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),2),0))| (>= |v(contrib(fuel_level,incr),2)|  0)))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,1),0))| (>= |v_final(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank3)),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank6)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,2),v_final(fuel_level,1)))| (= |v_initial(fuel_level,2)|  |v_final(fuel_level,1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),3)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank5)),end(0)))| (= |stime(refuel(tank5))|  |end(0)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank6)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),1)|  0)))
(assert (=> |required(ezcsp__geq(start(2),0))| (>= |start(2)|  0)))
(assert (=> |required(ezcsp__geq(stime(generate),0))| (>= |stime(generate)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank1))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank4))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank6)),0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank1))),10))| (=(- |end(2)|  |stime(refuel(tank1))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),1)|  0)))
(assert (=> |required(ezcsp__geq(start(0),0))| (>= |start(0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank1)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(start(3),end(2)))| (= |start(3)|  |end(2)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),1),0))| (= |v(contrib(fuel_level,decr,generate),1)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank5)),0))| (>= |stime(refuel(tank5))|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),2),0))| (>= |v(contrib(fuel_level,decr,generate),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank5))),10))| (=(- |end(2)|  |stime(refuel(tank5))| ) 10)))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,3),0))| (>= |v_final(fuel_level,3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank4))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(stime(generate),end(0)))| (= |stime(generate)|  |end(0)| )))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,1),0))| (< |v_final(fuel_level,1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,decr,generate),3),0))| (= |v(contrib(fuel_level,decr,generate),3)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank7)),end(0)))| (= |stime(refuel(tank7))|  |end(0)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank7)),0)|  0)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,3),1000))| (<= |v_initial(fuel_level,3)|  1000)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank7)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank1))),10))| (=(- |end(1)|  |stime(refuel(tank1))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank6)),1)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank2))),10))| (=(- |end(2)|  |stime(refuel(tank2))| ) 10)))
(assert (=> |required(ezcsp__geq(v_initial(fuel_level,0),0))| (>= |v_initial(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(2),2),ezcsp__eq,v(contrib(fuel_level,decr),2)))| (= |v(contrib(fuel_level,decr,generate),2)|  |v(contrib(fuel_level,decr),2)| )))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(1))))| (= |adur(generate)| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank4)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank4))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(end(0),start(0)))| (>= |end(0)|  |start(0)| )))
(assert (=> |required(ezcsp__geq(stime(refuel(tank3)),0))| (>= |stime(refuel(tank3))|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank7))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(end(3),0))| (>= |end(3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank2))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(start(3),0))| (>= |start(3)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,3),v_final(fuel_level,2)))| (= |v_initial(fuel_level,3)|  |v_final(fuel_level,2)| )))
(assert (=> |required(ezcsp__eq(stime(refuel(tank6)),end(1)))| (= |stime(refuel(tank6))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(start(0),0))| (= |start(0)|  0)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank1)),end(0)))| (= |stime(refuel(tank1))|  |end(0)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank1)),2)|  0)))
(assert (=> |required(ezcsp__geq(end(1),0))| (>= |end(1)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank3))),10))| (=(- |end(1)|  |stime(refuel(tank3))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),3),0))| (>= |v(contrib(fuel_level,incr),3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank7))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(dur(3),ezcsp__mn(end(3),start(3))))| (= |dur(3)| (- |end(3)|  |start(3)| ))))
(assert (=> |required(ezcsp__geq(stime(refuel(tank1)),0))| (>= |stime(refuel(tank1))|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(refuel(tank2))),10))| (=(- |end(1)|  |stime(refuel(tank2))| ) 10)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank5)),end(1)))| (= |stime(refuel(tank5))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(adur(refuel(tank1)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank1))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__lt(v_final(fuel_level,0),0))| (< |v_final(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__eq(v_initial(fuel_level,0),880))| (= |v_initial(fuel_level,0)|  880)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank7)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank6)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank6)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank7)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank7))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(adur(generate),ezcsp__mn(end(1),end(0))))| (= |adur(generate)| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank6)),0)|  0)))
(assert (=> |required(ezcsp__geq(end(1),start(1)))| (>= |end(1)|  |start(1)| )))
(assert (=> |required(ezcsp__eq(adur(refuel(tank5)),ezcsp__mn(end(1),end(1))))| (= |adur(refuel(tank5))| (- |end(1)|  |end(1)| ))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank4)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank6)),3)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank4)),0))| (>= |stime(refuel(tank4))|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),3),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),3)|  0)))
(assert (=> |required(ezcsp__eq(stime(generate),end(1)))| (= |stime(generate)|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),3)|  0)))
(assert (=> |required(ezcsp__eq(adur(refuel(tank2)),ezcsp__mn(end(2),end(0))))| (= |adur(refuel(tank2))| (- |end(2)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(stime(refuel(tank7)),end(1)))| (= |stime(refuel(tank7))|  |end(1)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),ezcsp__tm(2,ezcsp__mn(end(2),start(2)))))| (= |v(contrib(fuel_level,incr,refuel(tank7)),2)| (* 2(- |end(2)|  |start(2)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank4)),2)|  0)))
(assert (=> |required(ezcsp__sum(list(decr(3),2),ezcsp__eq,v(contrib(fuel_level,decr),3)))| (= |v(contrib(fuel_level,decr,generate),3)|  |v(contrib(fuel_level,decr),3)| )))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__geq(end(0),0))| (>= |end(0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),3),ezcsp__tm(2,ezcsp__mn(end(3),start(3)))))| (= |v(contrib(fuel_level,incr,refuel(tank2)),3)| (* 2(- |end(3)|  |start(3)| )))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank3)),ezcsp__mn(end(1),end(0))))| (= |adur(refuel(tank3))| (- |end(1)|  |end(0)| ))))
(assert (=> |required(ezcsp__eq(dur(1),ezcsp__mn(end(1),start(1))))| (= |dur(1)| (- |end(1)|  |start(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),1),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),1)|  0)))
(assert (=> |required(ezcsp__geq(stime(refuel(tank2)),0))| (>= |stime(refuel(tank2))|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),0),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr),2),0))| (>= |v(contrib(fuel_level,decr),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank4))),10))| (=(- |end(2)|  |stime(refuel(tank4))| ) 10)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank7))),10))| (=(- |end(2)|  |stime(refuel(tank7))| ) 10)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),0),0))| (>= |v(contrib(fuel_level,incr),0)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank1)),1),0))| (= |v(contrib(fuel_level,incr,refuel(tank1)),1)|  0)))
(assert (=> |required(ezcsp__eq(dur(0),ezcsp__mn(end(0),start(0))))| (= |dur(0)| (- |end(0)|  |start(0)| ))))
(assert (=> |required(ezcsp__eq(adur(refuel(tank6)),ezcsp__mn(end(2),end(1))))| (= |adur(refuel(tank6))| (- |end(2)|  |end(1)| ))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank7)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank7)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank2)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank2)),3)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank6)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank6)),2)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank3))),10))| (=(- |end(2)|  |stime(refuel(tank3))| ) 10)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(2),stime(refuel(tank6))),10))| (=(- |end(2)|  |stime(refuel(tank6))| ) 10)))
(assert (=> |required(ezcsp__eq(stime(refuel(tank6)),end(0)))| (= |stime(refuel(tank6))|  |end(0)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| (>= |v(contrib(fuel_level,incr,refuel(tank5)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank3)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank3)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank5)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank2)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank2)),2)|  0)))
(assert (=> |required(ezcsp__geq(start(1),0))| (>= |start(1)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),1),0))| (>= |v(contrib(fuel_level,decr,generate),1)|  0)))
(assert (=> |required(ezcsp__eq(v_final(fuel_level,2),ezcsp__mn(ezcsp__pl(v_initial(fuel_level,2),v(contrib(fuel_level,incr),2)),v(contrib(fuel_level,decr),2))))| (= |v_final(fuel_level,2)| (-(+ |v_initial(fuel_level,2)|  |v(contrib(fuel_level,incr),2)| ) |v(contrib(fuel_level,decr),2)| ))))
(assert (=> |required(ezcsp__geq(v_final(fuel_level,0),0))| (>= |v_final(fuel_level,0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),3),0))| (>= |v(contrib(fuel_level,decr,generate),3)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank5)),1),ezcsp__tm(2,ezcsp__mn(end(1),start(1)))))| (= |v(contrib(fuel_level,incr,refuel(tank5)),1)| (* 2(- |end(1)|  |start(1)| )))))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,decr,generate),0),0))| (>= |v(contrib(fuel_level,decr,generate),0)|  0)))
(assert (=> |required(ezcsp__leq(v_initial(fuel_level,0),1000))| (<= |v_initial(fuel_level,0)|  1000)))
(assert (=> |required(ezcsp__eq(dur(2),ezcsp__mn(end(2),start(2))))| (= |dur(2)| (- |end(2)|  |start(2)| ))))
(assert (=> |required(ezcsp__sum(list(incr(1),2),ezcsp__eq,v(contrib(fuel_level,incr),1)))| (= (+  |v(contrib(fuel_level,incr,refuel(tank4)),1)|  |v(contrib(fuel_level,incr,refuel(tank2)),1)|  |v(contrib(fuel_level,incr,refuel(tank3)),1)|  |v(contrib(fuel_level,incr,refuel(tank5)),1)|  |v(contrib(fuel_level,incr,refuel(tank7)),1)|  |v(contrib(fuel_level,incr,refuel(tank6)),1)|  |v(contrib(fuel_level,incr,refuel(tank1)),1)| ) |v(contrib(fuel_level,incr),1)| )))
(assert (=> |required(ezcsp__geq(end(3),start(3)))| (>= |end(3)|  |start(3)| )))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),0),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),0)|  0)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr,refuel(tank3)),3),0))| (>= |v(contrib(fuel_level,incr,refuel(tank3)),3)|  0)))
(assert (=> |required(ezcsp__eq(ezcsp__mn(end(1),stime(generate)),1000))| (=(- |end(1)|  |stime(generate)| ) 1000)))
(assert (=> |required(ezcsp__geq(v(contrib(fuel_level,incr),1),0))| (>= |v(contrib(fuel_level,incr),1)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank4)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank4)),2)|  0)))
(assert (=> |required(ezcsp__eq(v(contrib(fuel_level,incr,refuel(tank7)),2),0))| (= |v(contrib(fuel_level,incr,refuel(tank7)),2)|  0)))
(assert (=> |required(ezcsp__eq(start(2),end(1)))| (= |start(2)|  |end(1)| )))

; Check satisfiability
(check-sat)
(exit)
