(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Casey Mulligan, Russell Bradford, James H. Davenport, Matthew England, and ZakTonks
Generated on: 2018-04-19
Generator: TheoryGuru
Application: Industry Equilibrium: Input and output quantities, example set
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

; Code written by TheoryGuru
; Mulligan model #0064
;   is part of the example library included in "Quantifier Elimination for Reasoning in Economics" April 2018
;   by Mulligan, Bradford, Davenport, England, and Tonks
;   available at bathpaper.economicreasoning.com .
; Economics background for this and other examples is provided at examples.economicreasoning.com .

(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v3 () Real)
(declare-fun v4 () Real)
(declare-fun v5 () Real)
(declare-fun v6 () Real)
(declare-fun v7 () Real)
(declare-fun v8 () Real)
(declare-fun v9 () Real)
(declare-fun v10 () Real)
(declare-fun v11 () Real)
(declare-fun v12 () Real)
(declare-fun v13 () Real)
(declare-fun v14 () Real)
(declare-fun v15 () Real)
(declare-fun v16 () Real)
(declare-fun v17 () Real)
(declare-fun v18 () Real)
(declare-fun v19 () Real)
(declare-fun v20 () Real)
(declare-fun v21 () Real)
(declare-fun v22 () Real)
(declare-fun v23 () Real)
(declare-fun v24 () Real)

; input assumptions
(define-fun assumptions () Bool (and 
(= (* v14 v6) v3)
(= (+ (* v2 v6) (* v22 v4 v7)) (* v14 v6 v7))
(= (* v22 v7) v1)
(= (+ (* v20 v22 v4 (* v6 v6)) (* v16 (* v6 v6 v6)) (* (- 1) v14 v20 (* v6 v6 v6)) (* v18 v24 v4 v6 v7)) (* v19 v24 (* v4 v4) v7))
(= (+ (* v20 v22 (* v6 v6)) (* v18 v24 v6 v7)) (+ (* v15 (* v6 v6)) (* v19 v24 v4 v7)))
(= (+ (* (* v1 v1) v20) (* (- 1) (* v1 v1) v15 v21) (* (- 1) (* v1 v1) v16 v23) (* v1 v15 v2 v23)) 0)
(= (* v3 v5 v7) (* v1 v4))
(= (* v13 v7) v20)
(= (* v2 v9) v16)
(= (* v1 v8) v15)
(= (* v10 v3) v17)
(= (* v12 v6) v19)
(= (* v11 v4) v18)
(= v11 0)
(> v7 0)
(> v2 0)
(> v1 0)
(> v3 0)
(> v4 0)
))

; input hypothesis
(define-fun hypothesis () Bool 
(= (+ v13 (* v5 v9)) (+ (* v5 v8) v9))
)

(assert assumptions)
(assert hypothesis)
(check-sat) ; checking the existence of an example to assumptions => hypothesis


(exit)