(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Casey Mulligan, Russell Bradford, James H. Davenport, Matthew England, and ZakTonks
Generated on: 2018-04-19
Generator: TheoryGuru
Application: Industry Equilibrium: Determinants of short-run capital-labor complementarity, example set
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

; Code written by TheoryGuru
; Mulligan model #0067
;   is part of the example library included in "Quantifier Elimination for Reasoning in Economics" April 2018
;   by Mulligan, Bradford, Davenport, England, and Tonks
;   available at bathpaper.economicreasoning.com .
; Economics background for this and other examples is provided at examples.economicreasoning.com .

(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v3 () Real)
(declare-fun v4 () Real)
(declare-fun v5 () Real)
(declare-fun v6 () Real)
(declare-fun v7 () Real)
(declare-fun v8 () Real)
(declare-fun v9 () Real)
(declare-fun v10 () Real)
(declare-fun v11 () Real)
(declare-fun v12 () Real)
(declare-fun v13 () Real)
(declare-fun v14 () Real)
(declare-fun v15 () Real)
(declare-fun v16 () Real)
(declare-fun v17 () Real)
(declare-fun v18 () Real)
(declare-fun v19 () Real)
(declare-fun v20 () Real)
(declare-fun v21 () Real)
(declare-fun v22 () Real)
(declare-fun v23 () Real)
(declare-fun v24 () Real)
(declare-fun v25 () Real)
(declare-fun v26 () Real)
(declare-fun v27 () Real)
(declare-fun v28 () Real)
(declare-fun v29 () Real)
(declare-fun v30 () Real)
(declare-fun v31 () Real)

; input assumptions
(define-fun assumptions () Bool (and 
(= (+ v5 v6) 1)
(= v8 v18)
(= (+ (* v2 v7) (* v27 v4 v8)) (* v17 v7 v8))
(= (* v27 v8) v1)
(= (+ (* v17 v23 v7) (* v22 v27 v7)) (+ (* v23 v27 v4) (* v21 v7)))
(= (* v21 v28) v24)
(= (+ (* v24 v27 v4 (* v7 v7)) (* v20 (* v7 v7 v7)) (* (- 1) v17 v24 (* v7 v7 v7)) (* v22 v31 v4 v7 v8)) (* v23 v31 (* v4 v4) v8))
(= (+ (* v24 v27 (* v7 v7)) (* v22 v31 v7 v8)) (+ (* v19 (* v7 v7)) (* v23 v31 v4 v8)))
(= (+ (* (* v1 v1) v24) (* (- 1) (* v1 v1) v19 v25) (* v1 v19 v2 v29) (* (- 1) (* v1 v1) v20 v29)) 0)
(= (* v3 v6 v8) (* v2 v7))
(= (* v3 v5 v8) (* v1 v4))
(= (* v14 v8) v24)
(= v20 (* v10 v2))
(= (* v1 v9) v19)
(= (* v11 v3) v21)
(= (* v13 v7) v23)
(= (* v12 v4) v22)
(= (* v28 v3) (* v15 v18))
(= (+ (* v12 v16) v9) (+ v10 (* v13 v16)))
(> v3 0)
(> v8 0)
(> v2 0)
(> v1 0)
(> v7 0)
(> v4 0)
(and (< 0 v6) (< v6 1))
(> v30 0)
(> (* (* v1 v1) v26) (* v1 v2 v30))
(= v9 0)
))

; input hypothesis
(define-fun hypothesis () Bool 
(= (+ (* v13 v15 v6) (* v13 v16 v6)) (+ (* (- 1) v12 v15 v5) (* v12 v16 v6)))
)

(assert assumptions)
(assert hypothesis)
(check-sat) ; checking the existence of an example to assumptions => hypothesis


(exit)